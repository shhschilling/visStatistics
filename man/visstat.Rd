% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visstat.R
\name{visstat}
\alias{visstat}
\title{Visualization of statistical hypothesis testing based on decision tree}
\usage{
visstat(
  dataframe,
  varsample,
  varfactor,
  conf.level = 0.95,
  numbers = TRUE,
  minpercent = 0.05,
  graphicsoutput = NULL
)
}
\arguments{
\item{dataframe}{\code{data.frame} containing at least two columns. Data must be column wise ordered.
Contingency tables can be transformed to column wise structure with helper function \code{counts_to_cases(as.data.frame())}.}

\item{varsample}{column name of dependent variable in \code{dataframe}, datatype \code{character}.}

\item{varfactor}{column name of independent variable in \code{dataframe}, datatype \code{character}.}

\item{conf.level}{confidence level of the interval.}

\item{numbers}{a logical indicating whether to show numbers in mosaic count plots.}

\item{minpercent}{number between 0 and 1 indicating minimal fraction of total count data of a category to be displayed    in the mosaic count plots.}

\item{graphicsoutput}{output format of plot. Allowed are the \code{character} strings "png","pdf","svg". Default "NULL" provides no graphical output.}
}
\value{
Statistics of test with highest statistical power meeting assumptions.
}
\description{
\code{visstat()} \strong{vis}ualizes the \strong{stat}istical hypothesis testing between 
the dependent variable (or response)
\code{varsample} and the independent variable  \code{varfactor}. \code{varfactor} can have more than two features. 
\code{visstat()} runs a decision tree selecting the statistical hypothesis test with the highest statistical power 
 fulfilling the assumptions of the underlying test. For each test 
 \code{visstat()} returns an appropriate graph displaying the data with the main test statistics 
in the title and a text file with the complete test statistics including eventual post-hoc analysis. 
Implemented tests: \code{lm()},\code{t.test()}, \code{wilcox.test()}, 
\code{aov()}, \code{kruskal.test()}, \code{fisher.test()},\code{chisqu.test()}. 
Implemented tests for check of normal distribution of standardized residuals: \code{shapiro.test()} and \code{ks.test()}.
Implemented post-hoc tests: \code{TukeyHSD()} for aov() and \code{pairwise.wilcox.test()} for \code{kruskal.test()}
}
\details{
For the comparison of averages, the following algorithm is implemented: 
 If the p-values of the standardized residuals of  \code{shapiro.test()} or \code{ks.test()} are smaller 
than 1-conf.level, \code{kruskal.test()} resp. \code{wilcox.test()} are performed, otherwise the \code{oneway.test()}
and \code{aov()} resp. \code{t.test()} are performed and displayed.
Exception: If the sample size is bigger than 100,  \code{wilcox.test()} is never executed,instead always the \code{t.test()} is performed
 (Lumley et al. (2002) <doi:10.1146/annurev.publheath.23.100901.140546>).
For the test of independence of count data, Cochran's rule (Cochran (1954) <doi:10.2307/3001666>) is implemented: 
If more than 20 percent of all cells have a count smaller than 5, is performed and displayed, otherwise \code{chisqu.test()}. 
In both cases case an additional mosaic plot showing Pearson's residuals is generated.
}
\examples{
## Kruskal-Wallis rank sum test
visstat(iris,"Petal.Width", "Species") 

## ANOVA and One-way analysis of means
visstat(InsectSprays,"count","spray")  
visstat(InsectSprays,"count","spray",graphicsoutput="png") # example  with "png" output
file.remove("anova_count_spray.png") # remove figure

## Wilcoxon rank sum test
visstat(ToothGrowth,"len", "supp")

## Welch Two Sample t-test
mtcars$am=as.factor(mtcars$am) # transform to categorical data of type "factor"
visstat(mtcars,"mpg","am") # Welch Two Sample t-test

## Pearson's Chi-squared test
visstat(counts_to_cases(as.data.frame(HairEyeColor[,,1])),"Hair","Eye")

## Fisher test: Example transforming contingency table to \code{data.frame}
HairEyeColorMaleFisher=HairEyeColor[,,1]
HairEyeColorMaleFisher[HairEyeColorMaleFisher<10]=4 #create example enforcing Cochran's rule
#transform contingency table to \code{data.frame}
HairEyeColorMaleFisher = counts_to_cases(as.data.frame(HairEyeColorMaleFisher)) 
visstat(HairEyeColorMaleFisher,"Hair","Eye") # Fisher test
remove(HairEyeColorMaleFisher)

## Linear regression
visstat(trees,"Girth","Height") 
}
