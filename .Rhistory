16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
visstat(grades_gender,"Grade", "Sex")
mtcars
mtcars$am
mtcars$gear
mtcars$vs
# Welch's  t-test calling t.test()
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
out.width="100%",
out.height ="66%",
dpi=500
)
library(visStatistics)
# Welch's  t-test calling t.test()
ttestStatistics=visstat(mtcars,"mpg","am")
# Wilcoxon rank sum test (calling wilcox.test())
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
visstat(grades_gender,"Grade", "Sex")
add <- function(a, b) a + b
#pander::pandoc.table(iris[1:3, 1:4])  #pander has to be included
mtcars2=as.factor(mtcars$am)
mtcars
# Welch's  t-test calling t.test()
mtcars=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
mtcars2
mtcars$am=as.factor(mtcars$am)
mtcars$am
mtcar
mtcars
clear all()
close all()
mtcars
mtcars$am=as.factor(mtcars$am)
mtcars
ttestStatistics=visstat(mtcars,"mpg","am")
1 - sqrt(1 - alpha)
alpha=
alpha
alpha=0.05
1-alpha
sqrt(1-alpha)
1-conf.int
1-0.95
sqrt(1-0.95)
1-sqrt(1-0.95)
sqrt(0.05)
1-sqrt(0.05)
sqrt(0.95)
1-sqrt(0.95)
# Welch's  t-test calling t.test()
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
# Welch's  t-test calling t.test()
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
ttestStatistics
42*9
5*7
ttestStatistics
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
# print out test statistics
welchtestStatistics
?boxplot
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
visstat(grades_gender,"Grade", "Sex")
library(visStatistics)
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
visstat(grades_gender,"Grade", "Sex")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
visstat(grades_gender,"Grade", "Sex")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
visstat(grades_gender,"Grade", "Sex")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
visstat(grades_gender,"Grade", "Sex")
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
usethis::use_github_actions("pkgdown")
devtools::build_vignettes()
devtools::install_github(build_vignettes = TRUE
)
devtools::install_github(build_vignettes = TRUE)
anova_npk=visstat(npk,"yield","block")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
anova_npk=visstat(npk,"yield","block")
# Install release version from CRAN
install.packages("pkgdown")
# Install development version from GitHub
devtools::install_github("r-lib/pkgdown")
# Run to build the website
pkgdown::build_site()
library(visStatistics)
?ad.test
anova_npk=visstat(npk,"yield","block")
library(visStatistics)
anova_npk=visstat(npk,"yield","block")
?ad.test
install.packagess(hortest)
install.packages(hortest)
install.packages("hortest")
anova_npk=visstat(npk,"yield","block")
?ad.test
ad.test(rnorm(100, mean = 5, sd = 3))
install.packages("nortest")
library(visStatistics)
detach_package("visStatistics")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_package.R', echo=TRUE)
detach_package("visStatistics")
library(visStatistics)
anova_npk=visstat(npk,"yield","block")
?ad.test
ad.test(rnorm(100, mean = 5, sd = 3))
library(nortest)
ad.test(rnorm(100, mean = 5, sd = 3))
library(visStatistics)
ad.test(rnorm(100, mean = 5, sd = 3))
anova_npk=visstat(npk,"yield","block")
library(visStatistics)
devtools::load_all(".")
anova_npk=visstat(npk,"yield","block")
?aov
oneway
oneway.test()
?oneway.test
conf.level
anova_npk=visstat(npk,"yield","block")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
anova_npk=visstat(npk,"yield","block")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
anova_npk=visstat(npk,"yield","block")
vis_anova_assumptions(ToothGrowth$len, ToothGrowth$dose)
shapiro.test()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width=7,
fig.height=7
)
library(visStatistics)
# Welch's  t-test calling t.test()
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
# Wilcoxon rank sum test (calling wilcox.test())
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
anova_npk=visstat(npk,"yield","block")
anova = aov(samples ~ fact)
?aov
aov(yield ~ block)
aov(npk$yield ~ npk$block)
test=aov(npk$yield ~ npk$block)
test
test$fitted.values
test=lm(npk$yield ~ npk$block)
test
test$fitted.values
?lm
?qqnorm
devtools::load_all(".")
?aov
anova_npk=visstat(npk,"yield","block")
anova_npk
vis_anova_assumptions(ToothGrowth$len, ToothGrowth$supp)
test=vis_anova_assumptions(ToothGrowth$len, ToothGrowth$supp)
test
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=vis_anova_assumptions(ToothGrowth$len, ToothGrowth$supp)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=vis_anova_assumptions(ToothGrowth$len, ToothGrowth$supp)
library(visStatistics)
?&&
library(visStatistics)
debugSource('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
ttestStatistics=visstat(mtcars,"mpg","am")
isstat(mtcars,"mpg","am")
visstat(mtcars,"mpg","am")
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width=7,
fig.height=5
)
library(visStatistics)
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
library(visStatistics)
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
#Increasing the confidence level
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.99)
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
```
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
```
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
#  uncomenting the next line prints out test statistics
# ttestStatistics
```
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.99999)
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.5)
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.99)
warnings()
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
welchtestStatistics=visstat(grades_gender,"Grade", "Sex")
library(visStatistics)
alpha_sid=1-conf.level^(1/n_classes)
conf.level
conf.level=0.95
alpha_sid=1-conf.level^(1/n_classes)
n_classs=10
n_classses=10
n_classs=10
lpha_sidak=1-conf.level^(1/n_classes)
n_classses=10
lpha_sidak=1-conf.level^(1/n_classes)
n_classses=10
n_classes=10
lpha_sidak=1-conf.level^(1/n_classes)
alpha_sidak=1-conf.level^(1/n_classes)
alpha_sidak
alpha
alpha = 1 - conf.level
library(visStatistics)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
anova_npk=visstat(npk,"yield","block")
library(visStatistics)
anova_npk=visstat(npk,"yield","block")
library(visStatistics)
anova_npk=visstat(npk,"yield","block")
library(visStatistics)
anova_npk=visstat(npk,"yield","block")
?TukeyHSD
?oneway.test
?bartlett.test
?tuckey.hsd
TukeyHSD
?TukeyHSD
# Install release version from CRAN
install.packages("pkgdown")
# Install development version from GitHub
devtools::install_github("r-lib/pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
library(visStatistics)
visstat(iris,"Petal.Width","Species",graphicsoutput="pdf",plotDirectory=tempdir())
visstat(iris,"Petal.Width","Species")
test=visstat(iris,"Petal.Width","Species")
test
an = aov(samples ~ fact)
aov(Petal~Width)
aov(iris$Petal~iris$Width)
aov(iris$petal~iris$width)
iris
aov(iris$Petal.Width~iris$Petal.Length)
test=aov(iris$Petal.Width~iris$Petal.Length)
test
an=aov(iris$Petal~iris$Width)
an=aov(iris$Petal.Width~iris$Petal.Length)
an
tuk = TukeyHSD(an)
an=aov(iris$Petal.Width~iris$Petal.Length)
an
an$residuals
tuk = TukeyHSD(an)
anova_npk=visstat(npk,"yield","block")
anova_npk
anova_npk=visstat(npk,"yield","block", conf.level=0.99)
anova_npk
anova_npk=visstat(npk,"yield","block", conf.level=0.99)
library(visStatistics)
anova_npk=visstat(npk,"yield","block", conf.level=0.99)
anova_npk
anova_npk=visstat(npk,"yield","block", conf.level=0.99)
anova_npk
?aov
?lm
TukeyHSD
?TukeyHSD
library(visStatistics)
anova_npk=visstat(npk,"yield","block", conf.level=0.99)
anova_npk
library(visStatistics)
anova_npk=visstat(npk,"yield","block", conf.level=0.99)
anova_npk
?kruskal.test
library(visStatistics)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
ttestStatistics=visstat(mtcars,"mpg","am")
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.99)
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.99)
ttestStatistics=visstat(mtcars,"mpg","am",conf.level=0.94)
?pairwise.wilcox.test
visstat(iris,"Petal.Width", "Species")
pairwise.wilcox.test
?pairwise.wilcox.test
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
visstat(iris,"Petal.Width", "Species")
test=visstat(iris,"Petal.Width", "Species")
test
tuk
test=visstat(iris,"Petal.Width", "Species",conf.level=0.99)
test
library(visStatistics)
test=visstat(iris,"Petal.Width", "Species",conf.level=0.99)
test
?pairwise.wilcox.test
pairwise.wilcox.test(Ozone, Month)
ttach(airquality)
Month <- factor(Month, labels = month.abb[5:9])
attach(airquality)
Month <- factor(Month, labels = month.abb[5:9])
pairwise.wilcox.test(Ozone, Month)
test=pairwise.wilcox.test(Ozone, Month)
test
test$method
test$data.name
test=visstat(iris,"Petal.Width", "Species",conf.level=0.99)
test
anova_npk=visstat(npk,"yield","block")
anova_npk
TukeyHSD
?TuckeyHSD
?TukeyHSD
equire(graphics)
summary(fm1 <- aov(breaks ~ wool + tension, data = warpbreaks))
TukeyHSD(fm1, "tension", ordered = TRUE)
plot(TukeyHSD(fm1, "tension"))
# Install release version from CRAN
install.packages("pkgdown")
# Install development version from GitHub
devtools::install_github("r-lib/pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
library(visStatistics)
.Last.error.trace
counts_to_cases(as.data.frame(HairEyeColor[,,1]),countcol="Freq")
usethis::use_pkgdown()
pkgdown::build_site()
library(devtools)
install_github('r-lib/downlit')
install.packages("pkgdown")
pkgdown::build_site()
tools::buildVignettes(dir = ".", tangle=TRUE)
dir.create("inst/doc")
dir.create("doc")
file.copy(dir("vignettes", full.names=TRUE), "doc", overwrite=TRUE)
usethis::use_pkgdown()
pkgdown::build_site()
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.99)
visstat(trees,"Girth","Height",conf.level=0.95)
visstat(trees,"Girth","Height",conf.level=0.9)
conf.level = 0.05
alpha = 1 - conf.level
alpha
P = alpha
P
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.9)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.9)
conf.level
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
visstat(trees,"Girth","Height",conf.level=0.9)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.9)
conf.level
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.9)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.9)
?visreg
install.packags("visreg")
install.packages("visreg")
?visreg
library(visreg)
install.packages("visreg")
?visreg
library(visreg)
library("visreg")
?visreg
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.9)
require(visreg)
fit <- lm(Ozone ~ Solar.R,data=airquality)
visreg(fit)
visstat(trees,"Girth","Height",conf.level=0.9)
fit <- lm(Girth ~ Height,data=trees)
visreg(fit)
visstat(trees,"Girth","Height",conf.level=0.9)
test=visstat(trees,"Girth","Height",conf.level=0.9)
test
test=visstat(trees,"Girth","Height",conf.level=0.9)
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.9)
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.9)
test
test2=visstat(trees,"Girth","Height",conf.level=0.9)
test2=visstat(trees,"Girth","Height")
?ad.test
library(visStatistics)
fit <- lm(Girth ~ Height,data=trees)
fit
fit*3
reg$resid
fit$resid
md
test2=visstat(trees,"Girth","Height",conf.level=0.9)
library(visStatistics)
test2=visstat(trees,"Girth","Height",conf.level=0.9)
test2=visstat(trees,"Girth","Height")
library(visStatistics)
test2=visstat(trees,"Girth","Height")
?lm
library(visStatistics)
test2=visstat(trees,"Girth","Height")
library(visStatistics)
test2=visstat(trees,"Girth","Height")
?visreg
library(visStatistics)
visstat(trees,"Girth","Height")
