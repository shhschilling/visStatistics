detachAllPackages()
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_and_detach_all_packages.R", echo=TRUE)
detach_all_packages()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_and_detach_all_packages.R", echo=TRUE)
basic.packages <- c("package:grid","package:tools","package:compiler","package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
package.list <- setdiff(package.list,basic.packages)
package.list
if (length(package.list) > 0)
for (package in package.list) detach(package, character.only = TRUE)
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
package.list <- setdiff(package.list,basic.packages)
package.list
if (length(package.list) > 0)
for (package in package.list) detach(package, character.only = TRUE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_and_detach_all_packages.R", echo=TRUE)
detach_all_packages()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
detach_package("visStatistics")
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_and_detach_all_packages.R", echo=TRUE)
detach_package("visStatistics")
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_and_detach_all_packages.R", echo=TRUE)
detach_package("visStatistics")
detach_all_packages()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
basic.packages <- c("package:grid","package:tools","package:compiler","package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
package.list
if (length(package.list) > 0)  {
for (package in package.list) detach(package, character.only = TRUE, unload - TRUE)}
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
package.list
lapply(package.list, detach, character.only = TRUE, unload = TRUE)
lapply(package.list, detach, character.only = TRUE)
lapply(package.list, detach, character.only = TRUE, unload = TRUE)
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
package.list <- setdiff(package.list,basic.packages)
package.list
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_and_detach_all_packages.R", echo=TRUE)
detach_all_packages()
library(visStatistics)
detach_all_packages()
library(visStatistics)
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
detach_all_packages()
warnings()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
detach_all_packages()
invisible(suppressMessages(suppressWarnings(lapply(c("gsl","fBasics","stringr","stringi","Rmpfr"), require, character.only = TRUE))))
invisible(suppressMessages(suppressWarnings(lapply(names(sessionInfo()$loadedOnly), require, character.only = TRUE))))
sessionInfo()
library(visStatistics)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/vis_anova_assumptions.R", echo=TRUE)
library(visStatistics)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 7,
fig.height = 5,
out.width = "100%",
fig.path = "man/figures/README-"
)
library(visStatistics)
InsectSpraysAB <- InsectSprays[which(InsectSprays$spray == "A" | InsectSprays$spray == "B"), ]
InsectSpraysAB$spray <- factor(InsectSpraysAB$spray)
visstat(InsectSpraysAB, "count", "spray")
mtcars$am <- as.factor(mtcars$am)
ttestStatistics <- visstat(mtcars, "mpg", "am")
# ttestStatistics
visstat(ToothGrowth, "len", "supp")
anova_npk <- visstat(npk, "yield", "block")
visstat(iris, "Petal.Width", "Species", graphicsoutput = "pdf", plotDirectory = tempdir())
linreg_cars <- visstat(cars, "dist", "speed")
linreg_cars <- visstat(cars, "dist", "speed", conf.level = 0.99)
HairEyeColorDataFrame <- counts_to_cases(as.data.frame(HairEyeColor))
visstat(HairEyeColorDataFrame, "Hair", "Eye")
HairEyeColorMaleFisher <- HairEyeColor[, , 1]
# slicing out a 2 x2 contingency table
blackBrownHazelGreen <- HairEyeColorMaleFisher[1:2, 3:4]
blackBrownHazelGreen <- counts_to_cases(as.data.frame(blackBrownHazelGreen))
fisher_stats <- visstat(blackBrownHazelGreen, "Hair", "Eye")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(mtcars$mpg, mpg$am)
?mtcars
matcars$mpg
mtcars$mpg
two_sample_t_test(mtcars$mpg, mtcars$am)
fisher_stats <- visstat(blackBrownHazelGreen, "Hair", "Eye")
two_sample_t_test(mtcars$mpg, mtcars$am,samplename="hugo")
two_sample_t_test(mtcars$mpg, mtcars$am,samplename="hugo",factorname="hans")
library(visStatistics)
ttestStatistics <- visstat(mtcars, "mpg", "am")
two_sample_t_test(mtcars$mpg, mtcars$am,samplename="hugo",factorname="hans")
mtcars$mpg
names(mtcars$mpg)
nameof(mtcars$mpg)
names(mtcars)
names(mtcars$mpg)
list(mtcars$mpg)
which(mtcars$mpg)
colnames(mtcars$mpg)
colnames(mtcars)
head(mtcars$mpg)
ttestStatistics <- visstat(mtcars, "mpg", "am")
ttestStatistics
``{r}
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(
19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,
7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6
)
wilcoxonStatistics <- visstat(grades_gender, "Grade", "Sex")
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(
19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,
7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6
)
wilcoxonStatistics <- visstat(grades_gender, "Grade", "Sex")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R", echo=TRUE)
library(visStatistics)
ifelse(unlist(gregexpr("package:",search()))
)
ifelse(unlist(gregexpr("package:",search()),TRUE,FALSE)
)
ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)
gregexpr("package:",search())
gregexpr("package:")
?grepexpr
?gregexpr
gregexpr("package:",search()))
gregexpr("package:",search())
regexpr("package:",search())
bregexpr("package:",search())
gregexpr("package:",search())
ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)
?unlist
gregexpr("package:",search()))
gregexpr("package:",search())
ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)
search()
?setdiff
library(visStatistics)
?search()
?search
searcj()
search()
searchpaths()
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(
19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,
7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6
)
wilcoxonStatistics <- visstat(grades_gender, "Grade", "Sex")
library(visStatistics)
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(
19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,
7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6
)
wilcoxonStatistics <- visstat(grades_gender, "Grade", "Sex")
two_sample_wilcoxon_test(grades_gender$Grade,rades_gender$Sex)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,rades_gender$Sex)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex)
grades_gender
grades_gender$Sex
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",facorname="otto")
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto")
dev.off()
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto")
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex)
mtcars$am <- as.factor(mtcars$am)
ttestStatistics <- visstat(mtcars, "mpg", "am")
# Print the test statistics
ttestStatistics
# Set the confidence level explicitly resulting in wider confidence levels
mtcars$am <- as.factor(mtcars$am)
ttestStatistics <- visstat(mtcars, "mpg", "am", conf.level = 0.99)
mtcars$am <- as.factor(mtcars$am)
ttestStatistics <- visstat(mtcars, "mpg", "am", conf.level = 0.99)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
mtcars$am <- as.factor(mtcars$am)
ttestStatistics <- visstat(mtcars, "mpg", "am", conf.level = 0.99)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
?match.arg
rm(alternative)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
alternative
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
match.arg(c("gauss", "rect", "ep"),
c("gaussian", "epanechnikov", "rectangular", "triangular"),
several.ok = TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided")
alternative <- c("two.sided")
alternative <- match.arg(alternative)
alternative <- "two.sided"
alternative <- match.arg(alternative)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto")
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided")
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=1/2)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=1.5)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
missing(notchf
)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
?title
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
?mtext
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
?mtext
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
two_sample_wilcoxon_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3,notchf=FALSE)
library(visStatistics)
detach_all_packages()
library(visStatistics)
detach_package("visStatistics")
library(visStatistics)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_all_packages.R", echo=TRUE)
basic.packages <- c("package:grid","package:tools","package:compiler","package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
lapply(package.list,detach_package)
detach_package("visStatistics")
library("visStatistics")
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
package.list <- setdiff(package.list,basic.packages)
lapply(package.list,detach_package)
package.list
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
package.list <- setdiff(package.list,basic.packages)
package.list
lapply(package.list,detach_package)
lapply(package.list, detach, character.only = TRUE, unload = TRUE)
package.list
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_all_packages.R", echo=TRUE)
detach_all_packages()
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
package.list
library(visStatistics)
detach_package("visStatistics")
library(visStatistics)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_all_packages.R", echo=TRUE)
detach_all_packages()
package.list <- search()[ifelse(unlist(gregexpr("package:",search())) == 1,TRUE,FALSE)]
pacage.list
package.list
library("visStatistis")
library("visStatistics")
detach_all_packages()
library("visStatistics")
20788.40/325313.90
(20788.40/325313.90)6(1/3)
(20788.40/325313.90)^(1/3)
(1.039)^3*325313.90
(1.02)^3*325313.90
library(visStatistics)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R", echo=TRUE)
library(visStatistics)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R", echo=TRUE)
library(visStatistics)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
library(visStatistics)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,"hans","otto",alternative="two.sided",conf.level=0.3)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
?paste
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="hans",factorname="otto",alternative="two.sided",conf.level=0.3)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
t.test(mtcars$am,mtcars$mpg)
?t.test
t.test(1:10, y = c(7:20))
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
p_value < 1-conf.level
p_value=0.3
if (p_value < 1-conf.level){
comparepvalue="<"
} else{
comparepvalue=">"
}
conf.level=0.95
if (p_value < 1-conf.level){
comparepvalue="<"
} else{
comparepvalue=">"
}
if (p_value < 1-conf.level){
comparepvalue="<"
} else{
comparepvalue=">"
}
comparevalue
p_valaue
p_value=3
if (p_value < 1-conf.level){
comparepvalue="<"
} else{
comparepvalue=">"
}
comparepvalue
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
comparepvalue
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
debugSource("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
a <- "\U00B5"
a
cat(a)
?cat
print(a)
a=\U+03B1
a="\U+03B1"
a="\U03B1"
cat(a)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.3)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
2656.65+3870+1304
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
12*8
install.packages{"styler"}
install.packages("styler")
library("styler")
style_pkg()
help("styler_addins").
help("styler_addins")
styler_addins()
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
two_sample_t_test(grades_gender$Grade,grades_gender$Sex,samplename="grades",factorname="sex",alternative="two.sided",conf.level=0.99)
?title
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R", echo=TRUE)
?title
