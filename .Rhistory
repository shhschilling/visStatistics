devtools::load_all(".")
visstat(cars$dist,cars$speed)
cars
whos(cars)
which(cars)
typeof(cars)
cars=as.data.frame(cars)
cars
visstat(cars$dist,cars$speed)
cars=as.data.frame(cars)
visstat(cars$dist,cars$speed)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/check_error_bands.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
model <- lm(Girth ~ Height, data = trees)
# 1. Add predictions
pred.int_prediction <- predict(model, interval = "prediction")
pred.int_conf <- predict(model, interval = "conf")
mydata <- cbind(cars, pred.int)
# 2. Regression line + confidence intervals
library("ggplot2")
p <- ggplot(mydata, aes(speed, dist)) +
geom_point() +
stat_smooth(method = lm)
# 3. Add prediction intervals
p + geom_line(aes(y = lwr), color = "red", linetype = "dashed")+
geom_line(aes(y = upr), color = "red", linetype = "dashed")
mydata <- cbind(trees, pred.int)
# 2. Regression line + confidence intervals
library("ggplot2")
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
cars=as.data.frame(cars)
cars
cars$speed
visstat(cars$dist, cars$speed)
cars=as.data.frame(cars)
cars2=as.data.frame(cars)
visstat(cars2$dist, cars2$speed)
model <- lm(dist ~ speed, data = cars)
predict(model, interval = "prediction")
?predict.model
?predict
pred.int_prediction <- predict(model, interval = "prediction")
conf.int_prediction <- predict(model, interval = "confidene")
conf.int_prediction <- predict(model, interval = "confidence")
# 1. Add predictions
pred.int_prediction <- predict(model, interval = "prediction")
conf_band(speed, model, conf.level, -1)
#compare to output of own calculation
conf_band(speed, model, 0.95, -1)
#compare to output of own calculation
conf_band(cars$speed, model, 0.95, -1)
#compare to output of own calculation
lwr_conf=conf_band(cars$speed, model, 0.95, -1)
conf.int_prediction
upr_conf=conf_band(cars$speed, model, 0.95, +1)
conf.int_prediction[:,2]
conf.int_prediction[,2]
lwr=conf.int_prediction[,2]
lwr
lwr-lwr_conf
library(visStatistics)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
lwr=conf.int_prediction[,2]
lwr-lwr_conf
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
library(visStatistics)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
lwr_conf_pred-lwr_conf
# confidence interval
lwr_conf-conf.int_prediction[:,2]
conf.int_prediction[:,2]
conf.int_prediction[,2]
lwr_conf
# confidence interval
lwr_conf -conf.int_prediction[,2]
lwr_pred=pred_band(cars$speed, model, 0.95, -1)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
lwr_pred=pred_band(cars$speed, model, 0.95, -1)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
lwr_pred=progn_band(cars$speed, model, 0.95, -1)
lwr_progn=progn_band(cars$speed, model, 0.95, -1)
# prediction interval
lwr_progn -pred.int_prediction[,2]
lwr_progn
pred.int_prediction[,2]
# 1. Add predictions
pred.int_prediction <- predict(model, interval = "prediction")
# 1. Add predictions
pred.int_prediction <- predict(model, interval = "prediction")
# 1. Add predictions
pred.int_prediction <- predict.lm(model, interval = "prediction")
conf.int_prediction <- predict(model, interval = "confidence")
#compare to output of own calculation
lwr_conf=conf_band(cars$speed, model, 0.95, -1)
# 1. Add predictions
pred.int_prediction <- predict.lm(model, interval = "prediction")
conf.int_prediction <- predict(model, interval = "confidence")
suppressWarnings(predict())
suppressWarnings(predict)
suppressWarnings(predict())
pred.int_prediction <- predict(model, interval = "prediction")
conf.int_prediction <- predict(model, interval = "confidence")
# 1. Add predictions
suppressWarnings(pred.int_prediction <- predict(model, interval = "prediction"))
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
pred.int_prediction
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
visstat(trees$Girth,trees$Height)
visstat(trees,"Girth","Height",conf.level=0.99)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.99)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.99)
library(visStatistics)
visstat(trees,"Girth","Height",conf.level=0.99)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
visstat(trees,"Girth","Height",conf.level=0.99)
test=visstat(trees,"Girth","Height",conf.level=0.99)
test
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.99)
test
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=visstat(trees,"Girth","Height",conf.level=0.99)
test
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.99)
test
?predict
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=visstat(trees,"Girth","Height",conf.level=0.99)
test
test=visstat(trees,"Girth","Height",conf.level=0.5)
test
test=visstat(trees,"Girth","Height",conf.level=0.5)
test=visstat(trees,"Girth","Height",conf.level=0.1)
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.1)
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.1)
test=visstat(trees,"Girth","Height",conf.level=0.99)
test=visstat(trees,"Girth","Height",conf.level=0.9)
test=visstat(trees,"Girth","Height",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
# 1. Add predictions
suppressWarnings(pred.int_prediction <- predict(model, interval = "prediction"))
conf.int_prediction <- predict(model, interval = "confidence")
mydata <- cbind(cars, pred.int)
# 2. Regression line + confidence intervals
library("ggplot2")
p <- ggplot(mydata, aes(speed, dist)) +
geom_point() +
stat_smooth(method = lm)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
?stat_smooth
test=visstat(trees,"Girth","Height",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
library(visStatistics)
test=visstat(trees,"Girth","Height",conf.level=0.7)
test=visstat(cars,"dist","speed",conf.level=0.7)
test=visstat(cars,"dist","speed",conf.level=0.99)
test
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.7)
library(visStatistics)
test=visstat(cars,"dist","speed",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.7)
library(visStatistics)
mtext(
expression(
" regression: y = ax + b \n confidence level = ",
conf.level,
", a = ",
signif(reg$coefficients[2], 2),
", conf. interval [",
signif(conf_intervall_regression[2, 1], 2),
",",
signif(conf_intervall_regression[2, 2], 2),
"]",
", p = ",
signif(s$coefficients[2, 4], 2),
"\n b = ",
signif(reg$coefficients[1], 2),
", conf. interval [",
signif(conf_intervall_regression[1, 1], 2),
",",
signif(conf_intervall_regression[1, 2], 2),
"]",
", p = ",
signif(s$coefficients[1, 4], 2),
"\n adjusted R^2" ,
signif(s$adj.r.squared, 2)
))
x=c(1,100)
y=c(1,100)
plot(x,y)
source('~/OneDrive - Hochschule Luzern/Forschung/check_error_bands.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(visStatistics)
test=visstat(cars,"dist","speed",conf.level=0.7)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.7)
test=visstat(cars,"dist","speed",conf.level=0.9)
library(visStatistics)
test=visstat(cars,"dist","speed",conf.level=0.9)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
test=visstat(cars,"dist","speed",conf.level=0.9)
library(visStatistics)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
test=visstat(cars,"dist","speed",conf.level=0.9)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R', echo=TRUE)
library(visStatistics)
test=visstat(cars,"dist","speed",conf.level=0.9)
library(visStatistics)
test=visstat(cars,"dist","speed",conf.level=0.9)
