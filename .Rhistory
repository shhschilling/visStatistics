library(visStatistics)
visstat(ToothGrowth,"len", "supp")
visstat(InsectSprays,"count","spray")
library(visStatistics)
visstat(InsectSprays,"count","spray")
visstat(ToothGrowth,"len", "supp")
library(visStatistics)
?par
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
library(visStatistics)
file.exists("Rplots.pdf")
pwd
ls
pwd
file.exists("Rplots.pdf")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
library(visStatistics)
visstat(ToothGrowth,"len", "supp")
visstat(ToothGrowth,"len", "supp","png")
visstat(ToothGrowth,"len", "supp")
visstat(trees,"Girth","Height",graphicsoutput="png")
visstat(trees,"Girth","Height")
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
graphicsouput
graphicsoutput=NULL
graphicsouput\
graphicsouput
graphicsoutput=NULL
graphicsouput
deleteRplots = function(graphicsoutput=NULL)
{
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
deleRplots()
deleteRplots()
deleteRplots = function(graphicsoutput)
{
if (graphicsoutput=NULL){
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
deleteRplots = function(graphicsoutput)
{
if (graphicsoutput=NULL){
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
graphicsoutput is.NULL
is.NULL(graphicsoutput)
is.nULL(graphicsoutput)
is.null(graphicsoutput)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplots()
deleteRplots(graphicsoutput)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
visstat(ToothGrowth,"len", "supp")
exit
quit
library(visStatistics)
visstat(ToothGrowth,"len", "supp")
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
?plot
?visstat
?plot
graphicsoutput
deleteRplots(graphicsoutput)
library(visStatistics)
#Remove spurious empty Rplots.pdf
deleteRplots = function()
{
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
deleteRplots()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
deleteRplots()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
deleteRplotspdf()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplotspdf()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplotspdf()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplotspdf()
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
visstat(ToothGrowth,"len", "supp")
install.packages("devtools")
install_github("shhschilling/visStatistics")
library(devtools)
install_github("shhschilling/visStatistics")
visstat(trees,"Girth","Height")
visstat(iris,"Petal.Width", "Species")
visstat(InsectSprays,"count","spray")
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
titanic_train$Survived=as.factor(titanic_train$Survived)
>
visstat(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
visstat(trees,"Girth","Height")
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
visstat(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
visstat(trees,"Girth","Height")
get_samples_fact_inputfile(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/get_samples_fact_inputfile.R')
get_samples_fact_inputfile(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
get_samples_fact_inputfile(trees,"Girth","Height")
visstat(trees,"Girth","Height")
library(visStatistics)
visstat(trees,"Girth","Height")
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
pqs
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
?mosiac
?mosaicplot
??mosaic
pwd
ata(HairEyeColor)
## Basic Mosaic Display ##
HairEye <- margin.table(HairEyeColor, c(1,2))
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
data(HairEyeColor)
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
View(HairEyeColor)
HairEye <- margin.table(HairEyeColor, c(1,2))
View(HairEye)
ata(HairEyeColor)
## Basic Mosaic Display ##
HairEye <- margin.table(HairEyeColor, c(1,2))
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
## Hair Mosaic Display with Pearson residuals ##
Hair <- margin.table(HairEyeColor,1)
Hair
mHair <- as.table(rep(mean(margin.table(HairEyeColor, 1)), 4))
names(mHair) <- names(Hair)
mHair
library(devtools)
install_github("shhschilling/visStatistics")
data(HairEyeColor)
library(visStatistics)
?visstat
visstat(titanic_train,"Survived","Pclass")
library(devtools)
nstall_github("shhschilling/visStatistics")
nstall_github("shhschilling/visStatistics"i)
install_github("shhschilling/visStatistics")
library(visStatistics)
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
visstat(titanic_train,"Survived","Pclass")
visstat(InsectSprays,"count","spray")
library(visStatistics)
remove.packages("visStatistics")
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(visStatistcs)
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(testthat)
library(visStatistics)
install.packages('testthat')
install.packages("testthat")
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
visstat(iris,"Petal.Width", "Species")`
visstat(iris,"Petal.Width", "Petal.Length")`
visstat(InsectSprays,"count","spray")`
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
data(HairEyeColor)
View(HairEyeColor)
?wtdtable
??wtdtable
?wtd.table
??wtd.table
installed.packages('survey')
library(questionr)
library('questionr')
installed.packages('questionr')
library('questionr')
library(questionr)
installed.packages('questionr'
)
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
install.packages("titanic")
installed.packages('questionr')
install.packages("titanic")
installed.packages('questionr')
library(devtools)
install_github("juba/questionr")
install.packages('rgs')
questionr
library(questionr)
install.packages('questionr')
data("HairEyeColor")
View(HairEyeColor)
df+data("HairEyeColor")
df=data("HairEyeColor")
wtd.table(x = df$Hair, x = df$sex, weights = df$freq)
library(questionr)
wtd.table(x = df$Hair, x = df$sex, weights = df$freq)
wtd.table(x = df$Hair, y = df$sex, weights = df$freq)
test+wtd.table(x = df$Hair, y = df$sex, weights = df$freq)
test=wtd.table(x = df$Hair, y = df$sex, weights = df$freq)
test=wtd.table(x = df$Hair, y = df$sex, weights = df$Freq)
df$Hair
df
df=data("HairEyeColor")
test=wtd.table(x = df$Hair, y = df$sex, weights = df$Freq)
df$Hair
df
which(df)
size(df)
library(visStatistics)
