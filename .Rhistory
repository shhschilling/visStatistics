library(visStatistics)
visstat(ToothGrowth,"len", "supp")
visstat(InsectSprays,"count","spray")
library(visStatistics)
visstat(InsectSprays,"count","spray")
visstat(ToothGrowth,"len", "supp")
library(visStatistics)
?par
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
library(visStatistics)
file.exists("Rplots.pdf")
pwd
ls
pwd
file.exists("Rplots.pdf")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
library(visStatistics)
visstat(ToothGrowth,"len", "supp")
visstat(ToothGrowth,"len", "supp","png")
visstat(ToothGrowth,"len", "supp")
visstat(trees,"Girth","Height",graphicsoutput="png")
visstat(trees,"Girth","Height")
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
graphicsouput
graphicsoutput=NULL
graphicsouput\
graphicsouput
graphicsoutput=NULL
graphicsouput
deleteRplots = function(graphicsoutput=NULL)
{
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
deleRplots()
deleteRplots()
deleteRplots = function(graphicsoutput)
{
if (graphicsoutput=NULL){
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
deleteRplots = function(graphicsoutput)
{
if (graphicsoutput=NULL){
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
graphicsoutput is.NULL
is.NULL(graphicsoutput)
is.nULL(graphicsoutput)
is.null(graphicsoutput)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplots()
deleteRplots(graphicsoutput)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
visstat(ToothGrowth,"len", "supp")
exit
quit
library(visStatistics)
visstat(ToothGrowth,"len", "supp")
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
?plot
?visstat
?plot
graphicsoutput
deleteRplots(graphicsoutput)
library(visStatistics)
#Remove spurious empty Rplots.pdf
deleteRplots = function()
{
if (file.exists("Rplots.pdf"))
{
file.remove("Rplots.pdf")
}
deleteRplots()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
deleteRplots()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
deleteRplotspdf()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplotspdf()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplotspdf()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
deleteRplotspdf()
library(visStatistics)
visstat(trees,"Girth","Height",graphicsoutput="png")
library(visStatistics)
visstat(ToothGrowth,"len", "supp")
install.packages("devtools")
install_github("shhschilling/visStatistics")
library(devtools)
install_github("shhschilling/visStatistics")
visstat(trees,"Girth","Height")
visstat(iris,"Petal.Width", "Species")
visstat(InsectSprays,"count","spray")
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
titanic_train$Survived=as.factor(titanic_train$Survived)
>
visstat(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
visstat(trees,"Girth","Height")
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
visstat(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
visstat(trees,"Girth","Height")
get_samples_fact_inputfile(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/get_samples_fact_inputfile.R')
get_samples_fact_inputfile(trees,"Girth","Height")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
get_samples_fact_inputfile(trees,"Girth","Height")
visstat(trees,"Girth","Height")
library(visStatistics)
visstat(trees,"Girth","Height")
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
install.packages("titanic")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")c
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
pqs
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
?mosiac
?mosaicplot
??mosaic
pwd
ata(HairEyeColor)
## Basic Mosaic Display ##
HairEye <- margin.table(HairEyeColor, c(1,2))
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
data(HairEyeColor)
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
View(HairEyeColor)
HairEye <- margin.table(HairEyeColor, c(1,2))
View(HairEye)
ata(HairEyeColor)
## Basic Mosaic Display ##
HairEye <- margin.table(HairEyeColor, c(1,2))
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
## Hair Mosaic Display with Pearson residuals ##
Hair <- margin.table(HairEyeColor,1)
Hair
mHair <- as.table(rep(mean(margin.table(HairEyeColor, 1)), 4))
names(mHair) <- names(Hair)
mHair
library(devtools)
install_github("shhschilling/visStatistics")
data(HairEyeColor)
library(visStatistics)
?visstat
visstat(titanic_train,"Survived","Pclass")
library(devtools)
nstall_github("shhschilling/visStatistics")
nstall_github("shhschilling/visStatistics"i)
install_github("shhschilling/visStatistics")
library(visStatistics)
mosaic(HairEye, main = "Basic Mosaic Display of Hair Eye Color data")
visstat(titanic_train,"Survived","Pclass")
visstat(InsectSprays,"count","spray")
library(visStatistics)
remove.packages("visStatistics")
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(visStatistcs)
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
visstat(titanic_train,"Survived","Pclass")
library(testthat)
library(visStatistics)
install.packages('testthat')
install.packages("testthat")
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
visstat(iris,"Petal.Width", "Species")`
visstat(iris,"Petal.Width", "Petal.Length")`
visstat(InsectSprays,"count","spray")`
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
data(HairEyeColor)
View(HairEyeColor)
?wtdtable
??wtdtable
?wtd.table
??wtd.table
installed.packages('survey')
library(questionr)
library('questionr')
installed.packages('questionr')
library('questionr')
library(questionr)
installed.packages('questionr'
)
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
install.packages("titanic")
installed.packages('questionr')
install.packages("titanic")
installed.packages('questionr')
library(devtools)
install_github("juba/questionr")
install.packages('rgs')
questionr
library(questionr)
install.packages('questionr')
data("HairEyeColor")
View(HairEyeColor)
df+data("HairEyeColor")
df=data("HairEyeColor")
wtd.table(x = df$Hair, x = df$sex, weights = df$freq)
library(questionr)
wtd.table(x = df$Hair, x = df$sex, weights = df$freq)
wtd.table(x = df$Hair, y = df$sex, weights = df$freq)
test+wtd.table(x = df$Hair, y = df$sex, weights = df$freq)
test=wtd.table(x = df$Hair, y = df$sex, weights = df$freq)
test=wtd.table(x = df$Hair, y = df$sex, weights = df$Freq)
df$Hair
df
df=data("HairEyeColor")
test=wtd.table(x = df$Hair, y = df$sex, weights = df$Freq)
df$Hair
df
which(df)
size(df)
library(visStatistics)
install.packages{testthat}
install.packages(testthat)
install.packages("testthat")
library(testthat)
pwd
getwd()
use_test(name = testdummyL, open = rlang::is_interactive())
library(testthat)
use_test(name = testdummyL, open = rlang::is_interactive())
install.packages("testthat")
library(visStatistics)
getwd()
use_test(name = testdummyL, open = rlang::is_interactive())
usethis::use_test("foo")
usethis::use_test("visstatistics")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/test-visstatistics.R')
visstat(InsectSprays,"count","spray")
data("HairEyeColor")
df=data("HairEyeColor")
View(df)
data("HairEyeColor")
View(data("HairEyeColor"))
data("HairEyeColor")
View(data(HairEyeColor))
data(HairEyeColor)
HairEyeColor
typeof(HairEyeColor)
class(HairEyeColor)
datasets::HairEyeColor
data("mtcars")
mtcars
gearvscyl=table(mtcars$gear, mtcars$cyl)
chisq.test(mtcars$gear, mtcars$cyl)
visstat(mtcars"gear","cyl")
visstat(mtcars,"gear","cyl")
mtcars
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
library(visStatistics)
visstat(mtcars,"gear","cyl")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
library(visStatistics)
visstat(mtcars,"gear","cyl")
library(visStatistics)
visstat(mtcars,"gear","cyl")
mtcars
?mtcars
mtcars$am
as.factor(mtcars$am)
visstat(mtcars,"gear",as.factor(mtcars$am))
library(visStatistics)
visstat(mtcars,"gear",as.factor(mtcars$am))
visstat(mtcars,"gear","cyl")
visstat(mtcars,"gear",as.factor(mtcars$am))
?mtcars
visstat(mtcars,"mpg",as.factor(mtcars$am))
mtcars$am=as.factor(mtcars$am)
visstat(mtcars,"mpg","am"
)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
require(stats)
mosaicplot(Titanic, main = "Survival on the Titanic", color = TRUE)
Titanic
table(titanic)
table(Titanic)
mosaicplot(HairEyeColor, shade = TRUE)
visstat(mtcars,"mpg","am")
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
visstat(mtcars,"mpg","am")
library(visStatistics)
visstat(mtcars,"mpg","am")
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/helper_graphics.R')
visstat(mtcars,"mpg","am")
library(visStatistics)
visstat(mtcars,"mpg","am")
library(visStatistics)
visstat(mtcars,"mpg","am")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
mylist
mylist[1]
mylist$colortuple
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
colorscheme()
a=colorscheme()
a[[1]]
a[[2]]
a[[3]]
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
c=colorscheme()
colortuple=colorscheme[[2]]
colortuple=colorscheme()
is.null(3)
is.null(NULL)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
colorscheme()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
colorscheme()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
colorscheme()
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
colorscheme()
colorscheme(1)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R')
colorscheme
colorscheme()
colorscheme(5)
colorscheme()
colortuple(1)
colorscheme(1)
colorscheme(NULL)
colorscheme(1)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/color_scheme.R'
)
visstat(mtcars,"mpg","am")
library(visStatistics)
colortuple
ColorPalette
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/tests_and_visuals.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/colorscheme.R')
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/colorscheme.R')
library(visStatistics)
visstat(mtcars,"mpg","am")
visstat(titanic_train,"Survived","Pclass")
library(titanic)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
?mosaic
visstat(titanic_train,"Survived","Pclass")
vis_mosaic("Survived,"Pclass"")
vis_mosaic("Survived,"Pclass")
titanic$Survived
titanic_train$Survived
vis_mosaic(titanic_train$Survived,titanic_train$PassengerId)
?mosaic
mosaic(Titanic)
library(MASS)
mosaic(Titanic)
library(vcd)
mosaic(Titanic)
library(visStatistics)
mosaic(Titanic)
?MASS
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
titanic_train$Survived=as.factor(titanic_train$Survived)
titanic_train$Pclass=as.factor(titanic_train$Pclass)
visstat(titanic_train,"Survived","Pclass")
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/Examples_from_README.R')
visstat(trees,"Girth","Height") #without saving of plot
visstat(iris,"Petal.Width", "Species")
visstat(iris,"Petal.Width", "Petal.Length")
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/examples_visstat.R')
?multcompLetters
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/visstat.R')
library(visStatistics)
library(multcompView)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/examples_visstat.R')
library(visStatistics)
install.packages(c("assertthat", "backports", "BH", "boot", "broom", "checkmate", "class", "clipr", "cluster", "cmprsk", "codetools", "commonmark", "curl", "data.table", "dplyr", "Epi", "etm", "evaluate", "fansi", "forestplot", "ggformula", "ggplot2", "ggrepel", "ggstance", "ggthemes", "gtable", "gtools", "highr", "Hmisc", "hms", "htmlTable", "htmlwidgets", "KernSmooth", "knitr", "lattice", "lazyeval", "markdown", "MASS", "Matrix", "mgcv", "mime", "mosaic", "multcomp", "mvtnorm", "nlme", "nnet", "numDeriv", "openssl", "pillar", "pkgconfig", "plyr", "polspline", "prettyunits", "pROC", "ps", "quantreg", "R6", "Rcpp", "RcppArmadillo", "readr", "reshape2", "rms", "rpart", "sandwich", "scales", "SparseM", "spatial", "stringi", "stringr", "survival", "TH.data", "tibble", "tidyr", "tidyselect", "whisker", "withr", "xml2", "yaml"))
install.packages("Cairo")
install.packages("multcompView")
install.packages("vcd")
library(visStatistics)
install.packages("roxygen2")
library(visStatistics)
install.packages("pkgbuild")
library(visStatistics)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/examples_visstat.R')
visstat(trees,"Girth","Height") #without saving of plot
visstat(iris,"Petal.Width", "Petal.Length")
visstat(trees,"Girth","Height") #without saving of plot
visstat(iris,"Petal.Width", "Species")
?mutcompLetters
??multcompLetters
multcompLetters
??multcompLetters
multcompLetters?
q
?multcompLetters
visstat(iris,"Petal.Width", "Petal.Length")
visstat(InsectSprays,"count","spray")
library(testthat)
source('~/Documents/workspace/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/testthat/examples_visstat.R')
visstat(InsectSprays,"count","spray")
