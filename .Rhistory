HairEyeColorDataFrame=counts_to_cases(as.data.frame(HairEyeColor[,,1]))
HairEyeColorDataFrame
HairEyeColorDataFrame=counts_to_cases(as.data.frame(HairEyeColor))
HairEyeColorDataFrame
visstat(HairEyeColorDataFrame,"Hair","Eye")
library(visStatistics)
visstat(HairEyeColorDataFrame,"Hair","Eye")
visstat(counts_to_cases(as.data.frame(HairEyeColor),"Hair","Eye")
)
visstat(counts_to_cases(as.data.frame(HairEyeColor),"Hair","Eye"))
as.data.frame(HairEyeColor)
HairEyeColorDataFrame=counts_to_cases(as.data.frame(HairEyeColor))
visstat(HairEyeColorDataFrame,"Hair","Eye")
library(visStatistics)
?npk
npk
counts_to_cases(npk)
?npk
npk.aov <- aov(yield ~ block + N*P*K, npk)
?Titanic
Titanic
counts_to_cases(Titanic)
Titanic
apply(Titanic, c(3, 4), sum)
count_to_cases(apply(Titanic, c(3, 4), sum))
counts_to_cases(apply(Titanic, c(3, 4), sum))
apply(Titanic, c(3, 4), sum)
Titanic(c3,4)
Titanic[,3)
Titanic[,3]
Titanic
apply(Titanic, c(3, 4), sum)
aov(tyre$Mileage~tyre$Brands)
library(car)
tyre<-read.csv("https://datascienceplus.com/wp-content/uploads/2017/08/tyre.csv")
tyre
oneway_npk=visstat(npk,"yield","block")
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
onewway_npk
oneway_np
oneway_npk
oneway.test(npk$yield~npk$block)
TukeyHSD(npk$yield~npk$block)
?TukeyHSD
oneway_npk
test=neway.test(npk$yield~npk$block)
test=oneway.test(npk$yield~npk$block)
TukeyHSD(test)
TukeyHSD(summary(test)
test=oneway.test(npk$yield~npk$block)
TukeyHSD(summary(test))
test=aov(npk$yield~npk$block)
TukeyHSD(summary(test))
test=aov(npk$yield~npk$block)
TukeyHSD(test)
test=aov(npk$yield~npk$block)
TukeyHSD(test)
test=oneway.test(npk$yield~npk$block)
TukeyHSD(test)
paste("mean with", conf.level*100 ,"% conf. intervall ")
conf.level
conf.level=0.95
paste("mean with", conf.level*100 ,"% conf. intervall ")
c("mean +- sd ", paste("mean with", conf.level*100 ,"% conf. intervall "))
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
visstat
oneway_npk=visstat(npk,"yield","block")
oneway_npk
choose(6,2)
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
binom(2,2)
choose(2,2)
InsectSprays_tr=InsectSprays
InsectSprays_tr$count=sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
choose(6,2)
choose(3,2)
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
InsectSprays_tr=InsectSprays
InsectSprays_tr$count=sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
library(visStatistics)
InsectSprays_tr=InsectSprays
InsectSprays_tr$count=sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
library(visStatistics)
InsectSprays_tr=InsectSprays
InsectSprays_tr$count=sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
oneway_npk=visstat(npk,"yield","block")
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
oneway_npk=visstat(npk,"yield","block")
TooGrowth
ToothGrowth
?ToothGrowth
oneway_npk=visstat(npk,"yield","block")
oneway_npk
npk
block[,2]
npk[,2]
npktest=npk
npk[,2]==1
npk[,2]==1=N
npk[,2]==1="N"
(npk[,2]==1)="N"
replace((npk[,2]==1),"N)"
)
replace((npk[,2]==1),"N))
""
replace(npk[,2]==1),"N")
replace(npk[,2]==1,"N")
?replace
replace(npk[,2],1,"N")
replace(npktest[,2],1,"N")
oneway_npk=visstat(npk,"yield","block",conf.level=0.99)
oneway_npk=visstat(npk,"yield","block",conf.level=0.1)
InsectSprays_tr$count=sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
visstat(InsectSprays, "count", "spray")
?pairwise.wilcox.test
ttach(airquality)
Month <- factor(Month, labels = month.abb[5:9])
attach(airquality)
Month <- factor(Month, labels = month.abb[5:9])
visstaat(airquality,"Ozone","Month")
visstat(airquality,"Ozone","Month")
airquality$Month <- factor(airquality$Month)
visstaat(airquality,"Ozone","Month")
visstat(airquality,"Ozone","Month")
visstat(iris,"Petal.Width", "Species")
saveRDS(version = 2)
visstat(iris,"Petal.Width", "Species")
visstat(InsectSprays, "count", "spray")
visstat(InsectSprays_tr, "count", "spray")
test=visstat(InsectSprays_tr, "count", "spray")
test
plot(test$fact)
test=aov(InsectSprays_tr$count~ InsectSprays_tr$spray)
test
TukeyHSD(test)
t=TukeyHSD(test)
plot(t)
library(visStatistics)
mtcars$am=as.factor(mtcars$am)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
ttestStatistics=visstat(mtcars,"mpg","am")
library(visStatistics)
test=aov(InsectSprays_tr$count~ InsectSprays_tr$spray)
visstat(InsectSprays_tr, "count", "spray")
library(visStatistics)
visstat(InsectSprays_tr, "count", "spray")
visstat(iris,"Petal.Width", "Species")
visstat(InsectSprays, "count", "spray")
ttestStatistics=visstat(mtcars,"mpg","am")
neway_npk=visstat(npk,"yield","block")
oneway_npk=visstat(npk,"yield","block")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
signif((1-alpha_sidak)*100,2)
signif((1-a0.003)*100,2)
signif((1-0.003)*100,2)
alpha=0.05
round((1-0.003)*100,2)
library(visStatistics)
oneway_npk=visstat(npk,"yield","block")
visstat(iris,"Petal.Width", "Species")
test=aov(InsectSprays_tr$count~ InsectSprays_tr$spray)
visstat(InsectSprays_tr, "count", "spray")
library(visStatistics)
visstat(InsectSprays_tr, "count", "spray")
?legend
library(visStatistics)
visstat(InsectSprays_tr, "count", "spray")
library(visStatistics)
visstat(InsectSprays_tr, "count", "spray")
require(devtools)
use_readme_rmd()
use_news_md()
use_vignette("visStatistics")
use_github_links()
devtools::document()
devtools::install_githb("hadley/pkgdown")
devtools::install_github("hadley/pkgdown")
library(pkgdown)
build_site()
library(visStatistics)
devtools::build_readme()
file.remove(".git/hooks/pre-commit")
missing(conf.level)
conf.level
?kruskal.test
library(visStatistics)
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_package.R', echo=TRUE)
detach_package("visStatistics")
library(visStatistics)
pkgdown::build_site()
tools::showNonASCIIfile("README.md")
pwd
getwd()
devtools::build_readme()
library(visStatistics)
usethis::use_pkgdown()
pkgdown::build_site()
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/detach_package.R', echo=TRUE)
usethis::use_pkgdown()
use_readme_rmd()
InsectSpraysAB <- InsectSprays[ which(InsectSprays$spray == 'A' | InsectSprays$spray == 'B'), ]
InsectSpraysAB$spray = factor(InsectSpraysAB$spray)
visstat(InsectSpraysAB,"count","spray")
InsectSpraysAB <- InsectSprays[ which(InsectSprays$spray == 'A' | InsectSprays$spray == 'B'), ]
InsectSpraysAB$spray = factor(InsectSpraysAB$spray)
visstat(InsectSpraysAB,"count","spray")
InsectSpraysAB <- InsectSprays[ which(InsectSprays$spray == 'A' | InsectSprays$spray == 'B'), ]
InsectSpraysAB$spray = factor(InsectSpraysAB$spray)
visstat(InsectSpraysAB,"count","spray")
pkgdown::build_site()
?mosaic
library(visStatistics)
?mosaic
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown()
?build_home
library(visStatistics)
usethis::use_pkgdown()
library(visStatistics)
usethis::use_pkgdown()
devtools::build_readme()
library(visStatistics)
devtools::build_readme()
library(visStatistics)
usethis::use_pkgdown()
library(visStatistics)
usethis::use_pkgdown()
library(visStatistics)
usethis::use_pkgdown()
devtools::build_readme()
library(visStatistics)
usethis::use_pkgdown()
pkgdown::build_site()
devtools::build_readme()
pkgdown::build_site()
library(visStatistics)
devtools::build_readme()
pkgdown::build_site()
vignette("Vignette", package = "visStatistis")
vignette("Vignette", package = "visStatistics")
ivgnette("visStatistics", package = "visStatistics")
vignette("visStatistics", package = "visStatistics")
vignette("visStatistics")
vignette("visStatistics", package = "visStatistics")
library(visStatistics)
vignette("visStatistics", package = "visStatistics")
library(visStatistics)
vignette("visStatistics", package = "visStatistics")
vignette()
vignette(package = "visStatistics")
vignette("visStatistics", package = "visStatistics")
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
usethis::use_pkgdown()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
?visstat
library(visStatistics)
?visstat
?bla
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
devtools::load_all(".")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
a=3
typeof(a)
whos(a)
head(a)
is.numeric(a)
as.integer(a)
b=as.integer(a)
is.numeric(b)
?par
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
get_samples_fact_inputfile(mtcars, mpg, am)
get_samples_fact_inputfile(mtcars, "mpg", "am")
library(visStatistics)
ttestStatistics = visstat(mtcars,"mpg","am")
library(visStatistics)
=254627/205202
254627/205202
(254627/205202)^(1/3)
(254627/205202)^(1/3)-1
254627-205202
1.265^(1/3)
1.265^(1/3)-1
308*0.98
83*0.8
83*0.85
4000/4300
76*0.93
129*0.9
129*0.85
35.79*0.8
35.79*0.85
12*0.8
182*0.8
3^(1/20)
3^(1/20)-1
550/642
15/18*350
0.83*0.8
0.65*140
8500*12
3500+3000+12--
3500+1200+2700
(3500+1200+2700)*12
937*0.85
937*0.9
library(visStatistics)
install.packages("testthat")
library(visStatistics)
source("C:/Users/wdschill/OneDrive - Hochschule Luzern/Forschung/visStatistics/vignettes/visStatistics-vignette.R")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 7,
fig.height = 5,
out.width = "100%"
)
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
# uncomenting the next line prints out test statistics
# ttestStatistics
#Increasing the confidence level
ttestStatistics = visstat(mtcars,"mpg","am",conf.level = 0.99)
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
wilcoxonStatistics = visstat(grades_gender,"Grade", "Sex")
oneway_npk = visstat(npk,"yield","block")
InsectSprays_tr = InsectSprays
InsectSprays_tr$count = sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
visstat(iris,"Petal.Width", "Species")
linreg_cars = visstat(cars,"dist","speed")
linreg_cars = visstat(cars,"dist","speed",conf.level = 0.99)
#Extract the test statistics
linreg_cars$anderson_darling_test_residuals
linreg_cars$shapiro_test_residuals
linreg_cars = visstat(trees,"Height","Girth",conf.level = 0.9)
HairEyeColorDataFrame = counts_to_cases(as.data.frame(HairEyeColor))
HairEyeColorDataFrame = counts_to_cases(as.data.frame(HairEyeColor))
visstat(HairEyeColorDataFrame,"Hair","Eye")
HairEyeColorMaleFisher = HairEyeColor[,,1]
#slicing out a 2 x2 contingency table
blackBrownHazelGreen = HairEyeColorMaleFisher[1:2,3:4]
blackBrownHazelGreen = counts_to_cases(as.data.frame(blackBrownHazelGreen));
fisher_stats = visstat(blackBrownHazelGreen,"Hair","Eye")
# fisher_stats  #uncommenting prints out summary statistics
visstat(blackBrownHazelGreen,"Hair","Eye",graphicsoutput = "png",plotDirectory =
tempdir())
file.remove(file.path(tempdir(),"chi_squared_or_fisher_Hair_Eye.png"))
file.remove(file.path(tempdir(),"mosaic_complete_Hair_Eye.png"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 7,
fig.height = 5,
out.width = "100%"
)
library(visStatistics)
mtcars$am = as.factor(mtcars$am)
ttestStatistics = visstat(mtcars,"mpg","am")
# uncomenting the next line prints out test statistics
# ttestStatistics
#Increasing the confidence level
ttestStatistics = visstat(mtcars,"mpg","am",conf.level = 0.99)
grades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
wilcoxonStatistics = visstat(grades_gender,"Grade", "Sex")
oneway_npk = visstat(npk,"yield","block")
InsectSprays_tr = InsectSprays
InsectSprays_tr$count = sqrt(InsectSprays$count)
visstat(InsectSprays_tr, "count", "spray")
visstat(iris,"Petal.Width", "Species")
linreg_cars = visstat(cars,"dist","speed")
linreg_cars = visstat(cars,"dist","speed",conf.level = 0.99)
#Extract the test statistics
linreg_cars$anderson_darling_test_residuals
linreg_cars$shapiro_test_residuals
linreg_cars = visstat(trees,"Height","Girth",conf.level = 0.9)
HairEyeColorDataFrame = counts_to_cases(as.data.frame(HairEyeColor))
HairEyeColorDataFrame = counts_to_cases(as.data.frame(HairEyeColor))
visstat(HairEyeColorDataFrame,"Hair","Eye")
HairEyeColorMaleFisher = HairEyeColor[,,1]
#slicing out a 2 x2 contingency table
blackBrownHazelGreen = HairEyeColorMaleFisher[1:2,3:4]
blackBrownHazelGreen = counts_to_cases(as.data.frame(blackBrownHazelGreen));
fisher_stats = visstat(blackBrownHazelGreen,"Hair","Eye")
# fisher_stats  #uncommenting prints out summary statistics
visstat(blackBrownHazelGreen,"Hair","Eye",graphicsoutput = "png",plotDirectory =
tempdir())
file.remove(file.path(tempdir(),"chi_squared_or_fisher_Hair_Eye.png"))
file.remove(file.path(tempdir(),"mosaic_complete_Hair_Eye.png"))
vignette("visStatistics")
library(visStatistics)
packages()
sessionInfo()
install.packages("roxygen2")
install.packages("vcd","Cairo")
install.packages("nortest","multcompView")
install.packages("Cairo","multcompView")
install.packages("multcompView")
library(visStatistics)
plot(rnorm(50), rnorm(50))
library(visStatistics)
installed.packages("testthat")
install.packages("testthat")
library(visStatistics)
plot(rnorm(50), rnorm(50))
visstat(blackBrownHazelGreen,"Hair","Eye",graphicsoutput = "png",plotDirectory =
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/vignettes/visStatistics-vignette.R", echo=TRUE)
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
rades_gender <- data.frame(
Sex = as.factor(c(rep("Girl", 20), rep("Boy", 20))),
Grade = c(19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,
20.3, 9.3, 11.3, 18.2,17.5,10.2,20.1,13.3,17.2,15.1,16.2,17.3,
16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0,17.4,
7.3, 14.3,13.5,8.0,19.5,13.4,17.9,17.7,16.4,15.6))
wilcoxonStatistics = visstat(grades_gender,"Grade", "Sex")
visstat(grades_gender,"Grade", "Sex")
X11()
visstat(grades_gender,"Grade", "Sex")
source("~/OneDrive - Hochschule Luzern/Forschung/visStatistics/vignettes/visStatistics-vignette.R", echo=TRUE)
which R
which
which()
which(R)
which()
which(r)
visstat(grades_gender,"Grade", "Sex")
library("visStatistics")
visstat(grades_gender,"Grade", "Sex")
library("visStatistics")
visstat(grades_gender,"Grade", "Sex")
which R
which r
library("visStatistics")
