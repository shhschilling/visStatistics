visstat(dat,"Sex", "Grade")
dat <- data.frame(
Sex = as.factor(c(rep("Girl", 12), rep("Boy", 12))),
Grade = c(
19, 18, 9, 17, 8, 7, 16, 19, 20, 9, 11, 18,
16, 5, 15, 2, 14, 15, 4, 7, 15, 6, 7, 14
)
visstat(dat,"Sex", "Grade")
library(visStatistics)
dat <- data.frame(
Sex = as.factor(c(rep("Girl", 12), rep("Boy", 12))),
Grade = c(
19, 18, 9, 17, 8, 7, 16, 19, 20, 9, 11, 18,
16, 5, 15, 2, 14, 15, 4, 7, 15, 6, 7, 14
)
visstat(dat,"Sex", "Grade")
library(visStatistics)
dat <- data.frame(
Sex = as.factor(c(rep("Girl", 12), rep("Boy", 12))),
Grade = c(
19, 18, 9, 17, 8, 7, 16, 19, 20, 9, 11, 18,
16, 5, 15, 2, 14, 15, 4, 7, 15, 6, 7, 14
)
visstat(dat,"Sex", "Grade")
library(visStatistics)
dat <- data.frame(
Sex = as.factor(c(rep("Girl", 12), rep("Boy", 12))),
Grade = c(
19, 18, 9, 17, 8, 7, 16, 19, 20, 9, 11, 18,
16, 5, 15, 2, 14, 15, 4, 7, 15, 6, 7, 14
)
visstat(dat,"Sex", "Grade")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/tests/examples/only_graphical device.R', echo=TRUE)
dat <- data.frame(
Sex = as.factor(c(rep("Girl", 12), rep("Boy", 12))),
Grade = c(
19, 18, 9, 17, 8, 7, 16, 19, 20, 9, 11, 18,
16, 5, 15, 2, 14, 15, 4, 7, 15, 6, 7, 14
)
visstat(dat,"Sex", "Grade")
#Wilcoxon rank sum test: ToothGrowth ----
visstat(ToothGrowth,"len", "supp")
dat
visstat(dat,"Sex", "Grade")
is.data.frame(dat
)
visstat(dat,"Grade", "Sex")
#Wilcoxon rank sum test: ToothGrowth ----
visstat(ToothGrowth,"len", "supp")
visstat(ToothGrowth,"len", "supp",graphicsoutput = "png",plotDirectory=filedir)
visstat(ToothGrowth,"len", "supp",graphicsoutput = "pdf",plotDirectory=filedir)
#Wilcoxon rank sum test:Grades by Sex
dat <- data.frame(
Sex = as.factor(c(rep("Girl", 12), rep("Boy", 12))),
Grade = c(
19, 18, 9, 17, 8, 7, 16, 19, 20, 9, 11, 18,
16, 5, 15, 2, 14, 15, 4, 7, 15, 6, 7, 14
)
visstat(dat,"Grade", "Sex")
#Chi squqred, mosaic plots with Titanic data set----
#install.packages("titanic")
#example categorical data,
library(titanic)
titanic_train$Survived = as.factor(titanic_train$Survived)
titanic_train$Pclass = as.factor(titanic_train$Pclass)
#Pearsons Chi squared, mosaic plot with Pearson's residuals
visstat(titanic_train,"Survived","Pclass")
#Chi squared, mosaic plots with HairEyeColor----
#HairEyeColor data set: Pearsons Chi squared, mosaic plot with Pearson's residuals
HairEyeColorMale = counts_to_cases(as.data.frame(HairEyeColor[,,1]));
# linear regression: trees data set:----
visstat(trees,"Girth","Height")
visstat(dat,"Grade", "Sex")
# linear regression: trees data set:----
visstat(trees,"Girth","Height")
visstat(dat,"Grade", "Sex")
#display stats of linear regression
linear_regression_trees
# linear regression: trees data set:----
visstat(trees,"Girth","Height")
#Welch two sample t.test: mtcars data set ----
mtcars$am = as.factor(mtcars$am)
#Chi squqred, mosaic plots with Titanic data set----
#install.packages("titanic")
#example categorical data,
library(titanic)
titanic_train$Survived = as.factor(titanic_train$Survived)
titanic_train$Pclass = as.factor(titanic_train$Pclass)
#Pearsons Chi squared, mosaic plot with Pearson's residuals
visstat(titanic_train,"Survived","Pclass")
visstat(HairEyeColorMale,"Hair","Eye")
visstat(ToothGrowth,"len", "supp")#wilcoxon
#error: old plots are not erased but overwritten
visstat(iris,"Petal.Width", "Species") #kruskal wallis testing normality assumptions generating two plots just overlayed first plot
#2x2 contingency tables---
HairEyeColorMaleFisher = HairEyeColor[,,1]
#slicing out a 2 x2 contingency table
blackBrownHazelGreen = HairEyeColorMaleFisher[1:2,3:4]
fishertest = blackBrownHazelGreen
blackBrownHazelGreen = counts_to_cases(as.data.frame(blackBrownHazelGreen));
visstat(blackBrownHazelGreen,"Hair","Eye")
#error: old plots are not erased but overwritten
visstat(iris,"Petal.Width", "Species") #kruskal wallis testing normality assumptions generating two plots just overlayed first plot
visstat(HairEyeColorMale,"Hair","Eye")
source('~/OneDrive - Hochschule Luzern/Forschung/visStatistics/R/test_and_visuals.R', echo=TRUE)
#2x2 contingency tables---
HairEyeColorMaleFisher = HairEyeColor[,,1]
#slicing out a 2 x2 contingency table
blackBrownHazelGreen = HairEyeColorMaleFisher[1:2,3:4]
fishertest = blackBrownHazelGreen
blackBrownHazelGreen = counts_to_cases(as.data.frame(blackBrownHazelGreen));
visstat(blackBrownHazelGreen,"Hair","Eye")
