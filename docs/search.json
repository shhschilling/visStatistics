[{"path":"https://shhschilling.github.io/visStatistics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 visStatistics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"visStatistics: The right test, visualised","text":"visStatistics automatically selects visualises appropriate statistical hypothesis tests two column vectors type class \"numeric\", \"integer\", \"factor\". choice test depends class, distribution, sample size vectors, well user-defined ‘conf.level’. main function visstat() visualises selected test appropriate graphs (box plots, bar charts, regression lines confidence bands, mosaic plots, residual plots, Q-Q plots), annotated main test results, including assumption checks post-hoc analyses. scripted workflow particularly suited browser-based interfaces rely server-side R applications connected secure databases, users direct access, quick data visualisations test selection, e.g., statistical consulting projects.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"visStatistics: The right test, visualised","text":"numerous R packages provide statistical testing functionality, designed pedagogical accessibility primary concern. visStatistics package addresses challenge automating test selection using deterministic decision logic, removing burden manual test choice. automation enables users focus directly interpreting statistical outcomes rather navigating test selection. tailored visual outputs—annotated test results , appropriate, assumption checks post-hoc analyses—support comprehension help ensure valid conclusions outset. package particularly valuable statistical consulting student research projects, time constraints demand streamlined, assumption-aware output prioritises interpretation technical execution. implemented tests cover typical content introductory undergraduate course statistics. package also suits server-based applications users limited interaction: provide two input vectors, software returns valid, interpretable results without requiring statistical knowledge. supports reproducibility correct inference even constrained environments. remainder vignette organised follows: Section 3 focuses installation main function call, Section 4 summarises decision logic used select statistical test. Sections 5–7 provide background implemented tests illustrate decision logic using examples. Function names parentheses headings indicate corresponding statistical hypothesis test function R. Section 8 outlines main limitations package. Section 9 provides overview implemented tests.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"install-the-latest-development-version-from-github","dir":"Articles","previous_headings":"3 Getting started","what":"1. Install the latest development version from GITHUB","title":"visStatistics: The right test, visualised","text":"","code":"install_github(\"shhschilling/visStatistics\")"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"load-the-package","dir":"Articles","previous_headings":"3 Getting started","what":"2. Load the package","title":"visStatistics: The right test, visualised","text":"","code":"library(visStatistics)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"minimal-function-call","dir":"Articles","previous_headings":"3 Getting started","what":"3. Minimal function call","title":"visStatistics: The right test, visualised","text":"function visstat() accepts input two ways: standardised form, x y must vectors class \"numeric\", \"integer\", \"factor\". backward-compatible form, \"namex\" \"namey\" must character strings naming columns dataframe, must class \"numeric\", \"integer\", \"factor\". equivalent writing:","code":"# Standardised form (recommended): visstat(x, y)  # Backward-compatible form visstat(dataframe, \"namey\", \"namex\") visstat(dataframe[[\"namex\"]], dataframe[[\"namey\"]])"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"decision-logic","dir":"Articles","previous_headings":"","what":"Decision logic","title":"visStatistics: The right test, visualised","text":"Throughout remainder, data class \"numeric\" \"integer\" referred common mode numeric, data class \"factor\" referred categorical. significance level \\(\\alpha\\), used throughout hypothesis testing, defined 1 - conf.level, conf.level user-controllable argument (defaulting 0.95). choice statistical tests performed function visstat() depends whether data numeric categorical, number levels categorical variable, distribution data, well user-defined ‘conf.level’. function prioritizes interpretable visual output tests remain valid following decision logic:","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"numeric-response-and-categorical-predictor-comparing-central-tendencies","dir":"Articles","previous_headings":"4 Decision logic","what":"Numeric response and categorical predictor: Comparing central tendencies","title":"visStatistics: The right test, visualised","text":"response numeric predictor categorical, statistical hypothesis test central tendencies selected. categorical predictor exactly two levels, Welch’s t-test (t.test()) applied groups contain 30 observations. heuristic based central limit theorem, ensures approximate normality sampling distribution mean [1–3]. Welch’s t-test default method R comparing means generally preferred Student’s t-test assume equal variances. maintains comparable power even variances equal outperforms Student’s test variances differ [4–6]. smaller samples, group-wise normality assessed using Shapiro-Wilk test [[7] (shapiro.test()) significance level \\(\\alpha\\). Simulation studies consistently show Shapiro-Wilk test powerful detecting non-normality across distributions, especially smaller sample sizes.[8, 9] groups found approximately normally distributed according Shapiro–Wilk test, Welch’s t-test applied; otherwise, Wilcoxon rank-sum test (wilcox.test()) used. predictors two levels, model Fisher’s one-way analysis variables (ANOVA) (aov()) initially fitted.  normality residuals evaluated Shapiro-Wilk test (shapiro.test()); residuals considered approximately normal yields result exceeding significance threshold \\(\\alpha\\). condition met, Levene–Brown–Forsythe test (implemented levene.test()) [10] assesses homoscedasticity. variances homogeneous (\\(p > \\alpha\\)), Fisher’s one-way ANOVA (aov()) applied Tukey’s Honestly Significant Differences (HSD) (TukeyHSD()) post-hoc comparison. variances differ significantly (\\(p \\le \\alpha\\)), Welch’s heteroscedastic one-way ANOVA (oneway.test()) used, also followed Tukey’s HSD. residuals normally distributed according tests (\\(p \\le \\alpha\\)), Kruskal–Wallis test (kruskal.test()) selected, followed pairwise Wilcoxon tests (pairwise.wilcox.test()). graphical overview decision logic used provided figure . Decision tree used select appropriate statistical test categorical predictor numeric response, based number factor levels, normality, homoscedasticity.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"numeric-response-and-numeric-predictor-simple-linear-regression","dir":"Articles","previous_headings":"4 Decision logic","what":"Numeric response and numeric predictor: Simple linear regression","title":"visStatistics: The right test, visualised","text":"response predictor numeric, simple linear regression model (lm()) fitted analysed detail, including residual diagnostics, formal tests, plotting fitted values confidence bands. Note one predictor variable allowed, function designed two-dimensional visualisation.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"both-variables-categorical-comparing-proportions","dir":"Articles","previous_headings":"4 Decision logic","what":"Both variables categorical: Comparing proportions","title":"visStatistics: The right test, visualised","text":"variables categorical, direction assumed; order variables function call affect test statistic, influence graphical output. consistency, continue referring variables predictor response. visstat() tests null hypothesis variables independent using either Pearson’s \\(\\chi^2\\) test (chisq.test()) Fisher’s exact test (fisher.test()), depending expected cell counts. choice test based Cochran’s rule [11], advises \\(\\chi^2\\) approximation reliable expected cell count less 1 20 percent cells expected counts 5.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"numeric-response-and-categorical-predictor-comparing-central-tendencies-1","dir":"Articles","previous_headings":"","what":"Numeric response and categorical predictor: Comparing central tendencies","title":"visStatistics: The right test, visualised","text":"predictor consists class “factor” two levels response class “numeric” “integer” (mode “numeric”), statistical tests applied compare central tendencies across groups. section describes conditions parametric non-parametric tests chosen, based response type, number factor levels, underlying distributional assumptions.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"categorical-predictor-with-two-levels-welchs-t-test-and-wilcoxon-rank-sum","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies","what":"Categorical predictor with two levels: Welch’s t-test and Wilcoxon rank-sum","title":"visStatistics: The right test, visualised","text":"predictor variable exactly two levels, Welch’s t-test Wilcoxon rank-sum test applied.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"welchs-t-test-t-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.1 Categorical predictor with two levels: Welch’s t-test and Wilcoxon rank-sum","what":"Welch’s t-test (t.test())","title":"visStatistics: The right test, visualised","text":"Welch’s t-test (t.test()) assumes observations independent response variable approximately normally distributed within group. evaluates null hypothesis means two groups equal without assuming equal variances. test statistic given [12, 13] \\[ t = \\frac{\\bar{x}_1 - \\bar{x}_2}{\\sqrt{\\frac{s_1^2}{n_1} + \\frac{s_2^2}{n_2}}}, \\] \\(\\bar{x}_1\\) \\(\\bar{x}_2\\) sample means, \\(s_1^2\\) \\(s_2^2\\) sample variances, \\(n_1\\), \\(n_2\\) sample sizes two groups. statistic follows t-distribution degrees freedom approximated Welch-Satterthwaite equation: \\[ \\nu \\approx \\frac{ \\left( \\frac{s_1^2}{n_1} + \\frac{s_2^2}{n_2} \\right)^2 }{ \\frac{(s_1^2 / n_1)^2}{n_1 - 1} + \\frac{(s_2^2 / n_2)^2}{n_2 - 1} }. \\] resulting p-value computed t-distribution \\(\\nu\\) degrees freedom. Welch’s t-test remains valid exhibits minimal loss power even assumptions Student’s t-test – namely, normality equal variances response variable across groups – satisfied [4, 6]. therefore default implementation t-test R.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"wilcoxon-rank-sum-test-wilcox-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.1 Categorical predictor with two levels: Welch’s t-test and Wilcoxon rank-sum","what":"Wilcoxon rank-sum test (wilcox.test())","title":"visStatistics: The right test, visualised","text":"two-sample Wilcoxon rank-sum test (also known Mann-Whitney test) non-parametric alternative require response variable approximately normally distributed within group. tests difference location two independent distributions [14]. two groups distributions sufficiently similar shape scale, Wilcoxon rank-sum test can interpreted testing whether medians two populations equal [15]. two-level factor variable x defines two groups, sample sizes \\(n_1\\) \\(n_2\\). \\(N=n_1 + n_2\\) observations pooled assigned ranks \\(1\\) \\(N\\). Let \\(W_1\\) denote sum ranks assigned group \\(x_1\\) corresponding first level x containing \\(n_1\\) observations: \\[ W_{1}= \\sum_{=1}^{n_1} R(x_{1,})\\], \\(R(x_{1,})\\) rank observation \\(x_{1,}\\) pooled sample. test statistic \\(W\\) returned wilcox.test() computed \\[ W =U_{1}=W_{1} - \\frac{n_1(n_1 + 1)}{2}. \\] corresponds Mann-Whitney [14] \\(U\\) statistic first group. groups contain fewer 50 observations data contain ties, p-value computed exactly. Otherwise, normal approximation continuity correction used.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"graphical-output","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.1 Categorical predictor with two levels: Welch’s t-test and Wilcoxon rank-sum","what":"Graphical output","title":"visStatistics: The right test, visualised","text":"graphical output consists box plots overlaid jittered points display individual observations. Welch’s t-test applied, function includes confidence intervals based user-specified conf.level. title structured follows: First line: Test name chosen significance level \\(\\alpha\\). Second line: Null hypotheses automatically adapted based user-specified response grouping variable. Third line: Test statistic, p-value automated comparison \\(\\alpha\\) function returns list containing results applied test summary statistics used construct plot.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"welchs-t-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.1 Categorical predictor with two levels: Welch’s t-test and Wilcoxon rank-sum > 5.1.4 Examples","what":"Welch’s t-test","title":"visStatistics: The right test, visualised","text":"Motor Trend Car Road Tests dataset (mtcars) contains 32 observations, mpg denotes miles per (US) gallon, represents transmission type (0 = automatic, 1 = manual).  Increasing confidence level conf.level default 0.95 0.99 results wider confidence intervals, higher confidence level requires conservative bounds ensure interval includes true parameter value greater certainty.","code":"mtcars$am <- as.factor(mtcars$am) t_test_statistics <- visstat(mtcars$am, mtcars$mpg)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"wilcoxon-rank-sum-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.1 Categorical predictor with two levels: Welch’s t-test and Wilcoxon rank-sum > 5.1.4 Examples","what":"Wilcoxon rank sum test","title":"visStatistics: The right test, visualised","text":"Wilcoxon rank sum test exemplified differences central tendencies grades “boys” “girls” class:","code":"grades_gender <- data.frame(   sex = as.factor(c(rep(\"girl\", 21), rep(\"boy\", 23))),   grade = c(     19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,     20.3, 9.3, 11.3, 18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.0,     16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,     7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6, 17.3, 19.9, 4.4, 2.1   ) )  wilcoxon_statistics <- visstat(grades_gender$sex, grades_gender$grade)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"categorical-predictor-with-more-than-two-levels","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies","what":"Categorical predictor with more than two levels","title":"visStatistics: The right test, visualised","text":"predictor class “factor” two levels response mode “numeric”, visstat() either performs Fisher’s one- way ANOVA [16] (aov()), Welch’s heteroscedastic one-way ANOVA [17] (oneway.test()) , non-parametric alternative, Kruskal -Wallis test [18] (kruskal.test()). remainder section, briefly introduce tests , assumption checks, post-hoc procedures, illustrate test example.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"fishers-one-way-anova-aov","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels","what":"Fisher’s one-way ANOVA (aov())","title":"visStatistics: The right test, visualised","text":"Fisher’s one-way ANOVA (aov()) tests null hypothesis means multiple groups equal. assumes independent observations, normally distributed residuals, homogeneous variances across groups. test statistic ratio variance explained differences among group means (-group variance) unexplained variance within groups [19] \\[ F = \\frac{\\text{-group variance}}{\\text{within-group variance}} = \\frac{\\frac{\\sum_{=1}^{k} n_i (\\bar{x}_i - \\bar{x})^2}{k - 1}} {\\frac{\\sum_{=1}^{k}\\sum_{j=1}^{n_i}(x_{ij}-\\bar{x}_i)^2}{N - k}}, \\] \\(\\bar{x}_i\\) mean group \\(\\), \\(\\bar{x}\\) overall mean, \\(x_{ij}\\) observation \\(j\\) group \\(\\), \\(n_i\\) sample size group \\(\\), \\(k\\) number groups, \\(N\\) total number observations. null hypothesis, statistic follows F-distribution two parameters degrees freedom: numerator (\\(k - 1\\)) denominator (\\(N - k\\)). resulting p-value computed distribution.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"welchs-heteroscedastic-one-way-anova-oneway-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels","what":"Welch’s heteroscedastic one-way ANOVA (oneway.test())","title":"visStatistics: The right test, visualised","text":"assumptions independent observations normally distributed residuals met, homogeneous variances across groups assumed , Welch’s heteroscedastic one-way ANOVA (oneway.test()) [17] provides alternative aov(). compares group means using weights based sample sizes variances. degrees freedom adjusted using Satterthwaite-type approximation [13], resulting F-statistic non-integer degrees freedom.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"kruskalwallis-test-kruskal-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels","what":"Kruskal–Wallis test (kruskal.test())","title":"visStatistics: The right test, visualised","text":"assumption normality met, Kruskal–Wallis test provides non-parametric alternative. compares group distributions based ranked values tests null hypothesis groups come population — specifically, distributions location [18]. group distributions sufficiently similar shape scale, Kruskal–Wallis test can interpreted testing equality medians across groups [15]. test statistic defined : \\[ H = \\frac{12}{N(N+1)} \\sum_{=1}^{k} n_i \\left(\\bar{R}_i - \\bar{R} \\right)^2, \\] \\(n_i\\) sample size group \\(\\), \\(k\\) number groups, \\(\\bar{R}_i\\) average rank group \\(\\), \\(N\\) total sample size, \\(\\bar{R} = \\frac{N+1}{2}\\) average ranks. null hypothesis, \\(H\\) approximately follows \\(\\chi^2\\) distribution \\(k - 1\\) degrees freedom.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"testing-the-assumptions-visanovaassumptions","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels","what":"Testing the assumptions (visAnovaAssumptions())","title":"visStatistics: The right test, visualised","text":"test logic aov() oneway.test() follows respective assumptions. visstat() initially models data using aov() analyses residuals. following conditions met: (1) standardised residuals follow standard normal distribution, (2) residuals exhibit homoscedasticity (equal variances across groups), test statistic aov() returned. normality assumption satisfied, visstat() applies oneway.test(). normality assumption violated, kruskal.test() used instead. assumptions tested using visAnovaAssumptions() function.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"normality-of-residuals-shapiro-test-and-ad-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.5 Testing the assumptions (visAnovaAssumptions())","what":"Normality of residuals (shapiro.test() and ad.test())","title":"visStatistics: The right test, visualised","text":"visAnovaAssumptions() function evaluates normality standardised residuals ANOVA model using Shapiro–Wilk test (shapiro.test()) Anderson–Darling test (ad.test()). tests offer complementary strengths: Shapiro–Wilk generally exhibits greater power across range non-normal distributions small samples, whereas Anderson–Darling highly sensitive tail deviations performs reliably larger samples [8, 20]. Assessing assumptions solely p-values can lead type errors (false positives) type II errors (false negatives). large samples, even minor, random deviations null hypothesis—assumption normality—can result statistically significant p-values, leading type errors. Conversely, small samples, substantial violations assumption may reach statistical significance, resulting type II errors [21]. Thus, robustness statistical tests depends sample size shape underlying distribution. evident limitations normality tests used: instance, Shapiro–Wilk test unreliable large samples (\\(N > 5000\\)), Anderson–Darling test requires least 7 observations. Moreover, assumption tests provide information nature deviations expected distribution [22]. Therefore, assessment normality rely solely p-values complemented visual inspection. visstat() produces diagnostic plots including: (1) histogram standardised residuals overlaid standard normal distribution, (2) scatter plot standardised residuals versus fitted values predictor level, (3) Q–Q plot residuals. Since algorithmic logic replace combination formal tests expert visual judgement, function defaults assuming normality Shapiro–Wilk test yields p-value greater alpha. Simulation studies suggest Shapiro–Wilk highest power among normality tests small moderate samples [8].","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"equal-variances-across-groups-levene-test-and-bartlett-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.5 Testing the assumptions (visAnovaAssumptions())","what":"Equal variances across groups (levene.test() and bartlett.test())","title":"visStatistics: The right test, visualised","text":"aov() oneway.test() assess whether two samples drawn normal distributions mean. aov() assumes homogeneity variances across groups, oneway.test() require equal variances. decision logic visStatistics assumes homogeneity variances Levene–Brown–Forsythe test (implemented levene.test()) [10] yields p-value greater \\(\\alpha\\). Levene–Brown–Forsythe test improves upon Levene’s original test [23] using median instead mean centre data. makes robust non-normal data, providing reliable results many practical situations. Additionally, homoscedasticity assessed via Bartlett’s test (bartlett.test()), power Brown–Forsythe version Levene’s test [10] normality assumption met, robust deviations normality.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"controlling-the-family-wise-error-rate","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels","what":"Controlling the family-wise error rate","title":"visStatistics: The right test, visualised","text":"ANOVA omnibus test evaluates single null hypothesis: group means equal. null hypothesis gets rejected, like identify specific groups differ significantly . However, simple pairwise comparisons group means following ANOVA increases probability incorrectly declaring significant difference , fact, none. error quantified family-wise error rate \\(\\alpha_{PF}\\) (pronounced “alpha per family tests”), refers probability making least one Type error, , falsely rejecting null hypothesis across pairwise comparisons. Given \\(n\\) levels categorical variable, \\[ M = \\frac{n \\cdot (n - 1)}{2} \\] pairwise comparisons possible, defining family tests [24]. \\(M\\) corresponds number null hypotheses post hoc tests, testing whether means two specific groups equal.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"šidák-correction","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.6 Controlling the family-wise error rate","what":"Šidák correction","title":"visStatistics: The right test, visualised","text":"\\(\\alpha_{PT}\\) (pronounced “alpha per test”) probability making Type error one comparison, \\(1 - \\alpha_{PT}\\) probability making Type error one comparison. \\(M\\) comparisons independent , probability making Type error across entire family pairwise comparisons \\((1 - \\alpha_{PT})^M\\). family-wise error rate given complement [24]: \\[ \\alpha_{PF} = 1 - (1 - \\alpha_{PT})^M. \\] Solving last equation defining \\(\\alpha_{PF}\\) \\(\\alpha_{PT}\\) yields Šidák equation [25]: \\[ \\alpha_{PT}=1-(1-{\\alpha_{PF}})^{1/M}. \\] shows , order achieve given family-wise error rate, corresponding per-test significance level must reduced two groups. visstat() sets \\(\\alpha_{PF}\\) user-defined \\(\\alpha = 1 -\\) conf.level, resulting \\[\\alpha_{PT} = 1 - \\texttt{conf.level}^{1 / M}. \\] default setting conf.level = 0.95, leads : \\(n = 3\\) groups: \\(\\alpha_{PT} = 1.70\\%\\) \\(n = 6\\) groups: \\(\\alpha_{PT} = 0.34\\%\\) \\(n = 10\\) groups: \\(\\alpha_{PT} = 0.11\\%\\) examples illustrate Šidák approach becomes increasingly conservative number comparisons grows. Moreover, since method assumes independence among tests, may overly conservative assumption violated.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"post-hoc-test-following-an-anova-tukeyhsd","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.6 Controlling the family-wise error rate","what":"Post-hoc test following an ANOVA: TukeyHSD()","title":"visStatistics: The right test, visualised","text":"contrast general-purpose Šidák correction, Tukey’s Honestly Significant Differences procedure (TukeyHSD()) specifically designed pairwise mean comparisons following ANOVA (either aov() oneway.test()). controls family-wise error rate using critical value studentised range distribution, properly accounts correlated nature pairwise comparisons sharing common residual variance [26]. Based user-specified confidence level (conf.level), visstat() constructs confidence intervals pairwise differences factor level means. significant difference two means indicated corresponding confidence interval include zero. visstat() returns HSD-adjusted p-values associated confidence intervals pairwise comparisons. graphical display, visstat() uses dual approach: TukeyHSD() provides statistical test results significance determinations, Šidák-corrected confidence intervals around individual group means shown visualisation purposes. separation allows optimal statistical testing maintaining clear, interpretable graphics.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"post-hoc-test-following-the-kruskalwallis-rank-sum-test-pairwise-wilcox-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.6 Controlling the family-wise error rate","what":"Post-hoc test following the Kruskal–Wallis rank sum test: pairwise.wilcox.test()","title":"visStatistics: The right test, visualised","text":"post-hoc analysis following Kruskal–Wallis test, visstat() applies pairwise Wilcoxon rank sum test using pairwise.wilcox.test() compare pair factor levels (see section “Wilcoxon rank-sum test (wilcox.test())”). resulting p-values pairwise comparisons adjusted multiple testing using Holm’s method [27]: p-values first sorted smallest largest tested thresholds become less strict rank increases. stepwise adjustment assume independence among tests typically less conservative Šidák method, still ensuring strong control family-wise error rate.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"graphical-output-1","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels","what":"Graphical output","title":"visStatistics: The right test, visualised","text":"graphical output tests based numeric response categorical predictor two levels consists two panels: first focuses residual analysis, second actual test chosen decision logic. residual panel addresses assumption normality, graphically formal tests. displays scatter plot standardised residuals versus predicted values, well normal Q–Q plot comparing sample quantiles theoretical quantiles. residuals normally distributed, \\(5\\%\\) standardised residuals exceed approximately \\(|2|\\); Q–Q plot data points approximately follow red straight line. p-values formal tests normality (Shapiro–Wilk Anderson–Darling) wel tests homoscedasticiy (Bartlett’s Levene Brown–Forsythe) given title. visstat() illustrates, subsequent graph, either kruskal.test(), oneway.test(), aov() result (see also Section “Decision logic”). neither normality residuals homogeneity variances given, kruskal.test() executed. result illustrated using box plots alongside jittered data points, title displaying p-value kruskal.test(). box plot, number observations per level shown. Different green letters pair box plots indicate two groups considered significantly different, based Holm’s-adjusted pairwise Wilcoxon rank sum test p-values smaller \\(\\alpha\\). normality residuals can assumed, parametric test chosen: either aov(), homoscedasticity also assumed, oneway.test() otherwise. visstat() displays name test corresponding \\(F\\) p-value title. graph shows conf.level \\(\\cdot\\,100\\%\\) confidence intervals corresponding null hypothesis ANOVA (group means equal) Šidák-corrected \\((1 - \\alpha_{PT}) \\cdot 100\\%\\) confidence intervals used post hoc analysis. visstat(), Šidák intervals used visualisation, underlying method assumes independent comparisons can become overly conservative assumption violated. actual post hoc analysis based TukeyHSD(). significant test result two groups graphically represented different green letters pair group means. Besides graphical output, visstat() returns list containing relevant test statistics along corresponding post-hoc-adjusted \\(p\\)-values pairwise comparisons.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"one-way-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.8 Examples","what":"One-way test","title":"visStatistics: The right test, visualised","text":"npk dataset reports yield peas (pounds per block) agricultural experiment conducted six blocks. experiment, application three different fertilisers – nitrogen (N), phosphate (P), potassium (K) – varied systematically. block received either none, one, two, three fertilisers,  Normality residuals supported graphical diagnostics (scatter plot standardised residuals, Q-Q plot) formal tests (Shapiro–Wilk Anderson- Darling, \\(p > \\alpha\\)). However, homogeneity variances supported given confidence level (\\(p < \\alpha\\), bartlett.test()), p-value variance-robust oneway.test() reported. Post-hoc analysis TukeyHSD() shows significant yield differences blocks, share group label (e.g., green letters).","code":"oneway_npk <- visstat(npk$block,npk$yield,conf.level=0.90)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"anova-example","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.8 Examples","what":"ANOVA example","title":"visStatistics: The right test, visualised","text":"InsectSprays dataset reports insect counts agricultural experimental units treated six different insecticides. stabilise variance counts, apply square root transformation response variable.  transformation, homogeneity variances can assumed (\\(p> \\alpha\\) calculated bartlett.test()), test statistic p-value Fisher’s one-way ANOVAaov() displayed.","code":"insect_sprays_tr <- InsectSprays insect_sprays_tr$count_sqrt <- sqrt(InsectSprays$count) test_statistic_anova=visstat(insect_sprays_tr$spray, insect_sprays_tr$count_sqrt) # test_statistic_anova"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"kruskalwallis-rank-sum-test","dir":"Articles","previous_headings":"5 Numeric response and categorical predictor: Comparing central tendencies > 5.2 Categorical predictor with more than two levels > 5.2.8 Examples","what":"Kruskal–Wallis rank sum test","title":"visStatistics: The right test, visualised","text":"iris dataset contains petal width measurements (cm) three different iris species.  example, scatter plots standardised residuals Q-Q plot suggest residuals normally distributed. confirmed small p-values Shapiro–Wilk Anderson-Darling tests. p-values significance level \\(\\alpha\\), visstat() switches non-parametric kruskal.test(). Post-hoc analysis using pairwise.wilcox.test() shows significant differences petal width three species, indicated distinct group labels (green letters differ).","code":"visstat(iris$Species, iris$Petal.Width)"},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"simple-linear-regression-lm","dir":"Articles","previous_headings":"6 Numeric response and numeric predictor: Simple linear regression","what":"Simple linear regression (lm())","title":"visStatistics: The right test, visualised","text":"predictor response numeric contain one level , visstat() performs simple linear regression. resulting regression plot displays point estimate regression line \\[ y = + b \\cdot x, \\] \\(y\\) response variable, \\(x\\) predictor variable, \\(\\) intercept, \\(b\\) slope regression line.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"residual-analysis","dir":"Articles","previous_headings":"6 Numeric response and numeric predictor: Simple linear regression > 6.1 Simple linear regression (lm())","what":"Residual analysis","title":"visStatistics: The right test, visualised","text":"visstat() checks normality standardised residuals lm() graphically using Shapiro–Wilk Anderson-Darling tests. p-values null hypothesis normally distributed residuals tests smaller \\(1 -\\)conf.int, title residual plot display message: “Requirement normally distributed residuals met”. Regardless result residual analysis, visstat() proceeds perform regression. title graphical output indicates chosen confidence level (conf.level), estimated regression parameters confidence intervals p-values, adjusted \\(R^2\\). plot displays raw data, fitted regression line, confidence prediction bands corresponding specified conf.level. visstat() returns list containing regression test statistics, p-values normality tests standardised residuals, pointwise estimates confidence prediction bands.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"dataset-trees","dir":"Articles","previous_headings":"6 Numeric response and numeric predictor: Simple linear regression > 6.1 Simple linear regression (lm()) > 6.1.2 Examples","what":"dataset: `trees``","title":"visStatistics: The right test, visualised","text":"trees data set contains diameter Girth inches Volume cubic ft 31 black cherry trees.  p-values greater conf.level Anderson-Darling normality test Shapiro–Wilk test standardised residuals indicate normality assumption residuals underlying linear regression met. Increasing confidence level conf.level default 0.9 0.99 results wider confidence intervals regression parameters well wider confidence prediction bands visStatistics plot allows display second generated plot (assumption plot unchanged):","code":"linreg_trees <- visstat(trees$Girth, trees$Volume,conf.level=0.9) linreg_trees_99 <- visstat(trees$Girth, trees$Volume,conf.level = 0.99) plot(linreg_trees_99,which=2)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"both-variables-categorical-comparing-proportions-1","dir":"Articles","previous_headings":"","what":"Both variables categorical: Comparing proportions","title":"visStatistics: The right test, visualised","text":"variables categorical (.e., class factor), visstat() tests null hypothesis two variables independent. Observed frequencies typically arranged contingency table, rows index levels \\(\\) response variable columns index levels \\(j\\) predictor variable.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"pearsons-residuals-and-mosaic-plots","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions","what":"Pearson’s residuals and mosaic plots","title":"visStatistics: The right test, visualised","text":"Mosaic plots provide graphical representation contingency tables, area tile proportional observed cell frequency. aid interpretation, tiles coloured based Pearson residuals chi-squared test independence. residuals measure standardised deviation observed expected counts null hypothesis independence. Let \\(O_{ij}\\) \\(E_{ij}\\) denote observed expected frequencies row \\(\\) column \\(j\\) \\(R \\times C\\) contingency table. Pearson residual cell defined \\[ r_{ij} = \\frac{O_{ij} - E_{ij}}{\\sqrt{E_{ij}}}, \\quad = 1, \\ldots, R,\\quad j = 1, \\ldots, C. \\] Positive residuals (shaded blue) indicate observed counts greater expected, negative values suggest -representation (shaded red). Colour shading thus highlights combinations categorical levels contribute overall association.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"pearsons-chi2-test-chisq-test","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions","what":"Pearson’s \\(\\chi^2\\)-test (chisq.test())","title":"visStatistics: The right test, visualised","text":"test statistic Pearson’s \\(\\chi^2\\)-test [28] sum squared Pearson residuals: \\[ \\chi^2 = \\sum_{=1}^{R} \\sum_{j=1}^{C} r_{ij}^2 = \\sum_{=1}^{R} \\sum_{j=1}^{C} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}. \\] test statistic compared chi-squared distribution $ (R - 1)(C - 1)$ degrees freedom. resulting p-value corresponds upper tail probability — , probability observing value greater equal test statistic null hypothesis.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"pearsons-chi2-test-with-yates-continuity-correction","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions > 7.2 Pearson’s \\(\\chi^2\\)-test (chisq.test())","what":"Pearson’s \\(\\chi^2\\) test with Yates’ continuity correction","title":"visStatistics: The right test, visualised","text":"Yates’ correction applied Pearson \\(\\chi^2\\) statistic \\(2 \\times 2\\) contingency tables (one degree freedom). case, approximation discrete sampling distribution continuous \\(\\chi^2\\) distribution tends overestimate significance level test. correct , Yates proposed subtracting 0.5 absolute difference observed expected counts [29], resulting smaller test statistic: \\[ \\chi^2_{\\text{Yates}} = \\sum_{=1}^{2} \\sum_{j=1}^{2} \\frac{(|O_{ij} - E_{ij}| - 0.5)^2}{E_{ij}}. \\] reduced test statistic yields larger p-value, thereby lowering risk Type error. Yates’ continuity correction applied default underlying routine chisq.test(). ## Fisher’s exact test (fisher.test()) \\(\\chi^2\\) approximation considered reliable expected cell count less 1 20 percent cells expected counts 5 [11]). condition met, Fisher’s exact test [16] (fisher.test()) applied instead, non-parametric method rely large-sample approximations. test calculates exact p-value testing independence conditioning observed margins: row totals \\(R_i = \\sum_{j=1}^C O_{ij}\\) column totals \\(C_j = \\sum_{=1}^R O_{ij}\\), defining structure contingency table. \\(2 \\times 2\\) case, observed table can written : \\[ \\begin{array}{c|cc|c} & C_1 & C_2 & \\text{Row sums} \\\\\\\\ \\hline R_1 & & b & + b \\\\\\\\ R_2 & c & d & c + d \\\\\\\\ \\hline \\text{Column sums} & + c & b + d & n \\end{array} \\] Let \\[ O = \\begin{bmatrix} & b \\\\\\\\ c & d \\end{bmatrix} \\] denote observed \\(2 \\times 2\\) contingency table. exact probability observing table null hypothesis independence, given fixed margins, given hypergeometric probability mass function (PMF) \\[ \\mathbb{P}(O \\mid R_1, R_2, C_1, C_2) = \\frac{\\binom{+ b}{} \\binom{c + d}{c}}{\\binom{n}{+ c}}, \\] \\(n = + b + c + d\\) total sample size. p-value computed summing probabilities tables margins whose probabilities null less equal observed table. general \\(R \\times C\\) tables, fisher.test() generalises approach using multivariate hypergeometric distribution.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"test-choice-and-graphical-output","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions","what":"Test choice and graphical output","title":"visStatistics: The right test, visualised","text":"expected frequencies sufficiently large - specifically, least 80% cells expected counts greater 5 expected count smaller 1, function uses Pearson’s \\({\\chi}^2\\)-test (chisq.test()). Otherwise, switches Fisher’s exact test (fisher.test()) [11]. 2--2 contingency tables, Yates’ continuity correction [29] always applied Pearson’s \\({\\chi}^2\\)-test. tests independence visstat() displays grouped column plot includes respective test’s p-value title, well mosaic plot showing colour-coded Pearson residuals p-value Pearson’s \\(\\chi^2\\)-test.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"transforming-a-contingency-table-to-a-data-frame","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions","what":"Transforming a contingency table to a data frame","title":"visStatistics: The right test, visualised","text":"following examples tests categorical predictor response based HairEyeColor contingency table. Contingency tables must converted required column-based data.frame using helper function counts_to_cases(). function transforms contingency table HairEyeColor data.frame named HairEyeColourDataFrame.","code":"HairEyeColourDataFrame <- counts_to_cases(as.data.frame(HairEyeColor))"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"examples-3","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions","what":"Examples","title":"visStatistics: The right test, visualised","text":"examples section, test null hypothesis hair colour (“Hair”) eye colour (“Eye”) independent .","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"pearsons-chi2-test-chisq-test-1","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions > 7.5 Examples","what":"Pearson’s \\({\\chi}^2\\)-test (chisq.test())","title":"visStatistics: The right test, visualised","text":"graphical output shows null hypothesis Pearson’s \\(\\chi^2\\) test – namely, hair colour eye colour independent – must rejected default significance level \\(\\alpha=0.05\\) (\\(p = 2.33 \\cdot 10^{-25} < \\alpha\\)). mosaic plot indicates strongest deviations due -representation individuals black hair brown eyes, blond hair blue eyes. contrast, individuals blond hair brown eyes -represented.","code":"hair_eye_colour_df <- counts_to_cases(as.data.frame(HairEyeColor)) visstat(hair_eye_colour_df$Eye, hair_eye_colour_df$Hair)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"pearsons-chi2-test-with-yates-continuity-correction-1","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions > 7.5 Examples > 7.5.1 Pearson’s \\({\\chi}^2\\)-test (chisq.test())","what":"Pearson’s \\({\\chi}^2\\)-test with Yate’s continuity correction","title":"visStatistics: The right test, visualised","text":"following example, restrict data participants either black brown hair either brown blue eyes, resulting 2--2 contingency table.  Also reduced dataset reject null hypothesis independence hair colors “brown” “black” eye colours “brown” ” blue”. mosaic plot shows blue-eyed persons black hair - represented. Note higher p-value Pearson’s \\({\\chi}^2\\)-test Yate’s continuity correction (p = 0.00354) compared p-value Pearson’s \\({\\chi}^2\\)-test (p = 0.00229) shown mosaic plot.","code":"hair_black_brown_eyes_brown_blue <- HairEyeColor[1:2, 1:2, ] # Transform to data frame hair_black_brown_eyes_brown_blue_df <- counts_to_cases(as.data.frame(hair_black_brown_eyes_brown_blue)) # Chi-squared test visstat(hair_black_brown_eyes_brown_blue_df$Eye, hair_black_brown_eyes_brown_blue_df$Hair)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"fishers-exact-test-fisher-test","dir":"Articles","previous_headings":"7 Both variables categorical: Comparing proportions > 7.5 Examples","what":"Fisher’s exact test (fisher.test())","title":"visStatistics: The right test, visualised","text":", extract 2--2 contingency table full dataset, time keeping male participants black brown hair hazel green eyes. Pearson’s \\({\\chi}^2\\) test applied table yield expected frequency less 5 one four cells (25% cells), violates requirement least 80% expected frequencies must 5 greater [11]. Therefore, visstat() automatically selects Fisher’s exact test instead.","code":"hair_eye_colour_male <- HairEyeColor[, , 1] # Slice out a 2 by 2 contingency table black_brown_hazel_green_male <- hair_eye_colour_male[1:2, 3:4] # Transform to data frame black_brown_hazel_green_male <- counts_to_cases(as.data.frame(black_brown_hazel_green_male)) # Fisher test fisher_stats <- visstat(black_brown_hazel_green_male$Eye, black_brown_hazel_green_male$Hair)"},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"saving-the-graphical-output","dir":"Articles","previous_headings":"","what":"Saving the graphical output","title":"visStatistics: The right test, visualised","text":"generated graphics can saved file format supported Cairo(), including “png”, “jpeg”, “pdf”, “svg”, “ps”, “tiff” user specified plotDirectory. optional argument plotName given, naming output follows pattern \"testname_namey_namex.\", \"testname\" specifies selected test \"namey\" \"namex\" character strings naming selected data vectors y x, respectively. suffix corresponding chosen graphicsoutput (e.g., \"pdf\", \"png\") concatenated form complete output file name. following example, store graphics png format plotDirectory tempdir() default naming convention: full file path generated graphics stored attribute \"plot_paths\" returned object class \"visstat\". Remove graphical output plotDirectory: assumptions plots (residual Q-Q plot) generated, corresponding plot prefix \"assumption_.","code":"#Graphical output written to plotDirectory: In this example  # a bar chart to visualise the Chi-squared test and mosaic plot showing # Pearson's residuals. #chi_squared_or_fisher_Hair_Eye.png and mosaic_complete_Hair_Eye.png save_fisher = visstat(black_brown_hazel_green_male, \"Hair\", \"Eye\",         graphicsoutput = \"png\", plotDirectory = tempdir()) paths <- attr(save_fisher, \"plot_paths\") print(paths) #> [1] \"/var/folders/5c/n85wqnh95l50qbp3s9l0rp_w0000gn/T//RtmpsYwy80/chi_squared_or_fisher_Hair_Eye.png\" #> [2] \"/var/folders/5c/n85wqnh95l50qbp3s9l0rp_w0000gn/T//RtmpsYwy80/mosaic_complete_Hair_Eye.png\" file.remove(paths) #> [1] TRUE TRUE"},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"limitations-by-default-settings","dir":"Articles","previous_headings":"9 Limitations","what":"Limitations by default settings","title":"visStatistics: The right test, visualised","text":"main purpose package decision-logic based automatic visualisation statistical test results. Therefore, except user-adjustable conf.level parameter, statistical tests applied using default settings corresponding base R functions. consequence, paired tests currently supported visstat() allow study interactions terms different levels independent variable analysis variance. Focusing graphical representation tests, simple linear regression implemented, multiple linear regressions visualised.","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"limitations-of-of-decision-logic-based-on-p-values","dir":"Articles","previous_headings":"9 Limitations","what":"Limitations of of decision-logic based on p-values","title":"visStatistics: The right test, visualised","text":"decision logic main function visstat() based Shapiro-Wilk test normality Levene-Brown-Forsythe test variance homogeneity. However, single test maintains optimal Type error rates statistical power across distributions [30], p-values obtained tests may unreliable assumptions violated. Combining multiple tests differing assumptions using simple majority voting inflates overall Type error rate, making approach inadequate. Therefore, automated test selection based solely p-values replace visual inspection sample distributions provided visstat(). Based plots, may necessary override automated choice test individual cases. contrast, bootstrapping methods [31] make minimal distributional assumptions can provide confidence intervals nearly statistic. However, bootstrapping computationally intensive, often requiring thousands resamples, may perform poorly small sample sizes. runs counter purpose visStatistics package, designed offer rapid overview data, laying groundwork deeper analysis subsequent steps. package targets users basic statistical literacy, non-specialist professionals students applied fields. covers topics typically included undergraduate course applied statistics, intentionally excluding advanced methods like bootstrapping keep focus foundational concepts.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"numeric-response-and-categorical-predictor","dir":"Articles","previous_headings":"10 Implemented tests","what":"Numeric response and categorical predictor","title":"visStatistics: The right test, visualised","text":"response numeric predictor categorical, test central tendency selected: t.test(), wilcox.test(), aov(), oneway.test(),kruskal.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"normality-assumption-check","dir":"Articles","previous_headings":"10 Implemented tests > 10.1 Numeric response and categorical predictor","what":"Normality assumption check","title":"visStatistics: The right test, visualised","text":"shapiro.test() ad.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"homoscedasticity-assumption-check","dir":"Articles","previous_headings":"10 Implemented tests > 10.1 Numeric response and categorical predictor","what":"Homoscedasticity assumption check","title":"visStatistics: The right test, visualised","text":"bartlett.test() levene.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"post-hoc-tests","dir":"Articles","previous_headings":"10 Implemented tests > 10.1 Numeric response and categorical predictor","what":"Post-hoc tests","title":"visStatistics: The right test, visualised","text":"TukeyHSD() (aov()oneway.test()) pairwise.wilcox.test() (kruskal.test())","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"numeric-response-and-numeric-predictor","dir":"Articles","previous_headings":"10 Implemented tests","what":"Numeric response and numeric predictor","title":"visStatistics: The right test, visualised","text":"response predictor numeric, simple linear regression model fitted: lm()","code":""},{"path":"https://shhschilling.github.io/visStatistics/articles/visStatistics.html","id":"both-variables-categorical","dir":"Articles","previous_headings":"10 Implemented tests","what":"Both variables categorical","title":"visStatistics: The right test, visualised","text":"variables categorical, visstat() tests null hypothesis independence using one following: chisq.test() (default larger samples) fisher.test() (used small expected cell counts based Cochran’s rule)","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sabine Schilling. Maintainer, author, copyright holder.            2025 Peter Kauf. Contributor.","code":""},{"path":"https://shhschilling.github.io/visStatistics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schilling S (2025). visStatistics: Automated Selection Visualisation Statistical Hypothesis Tests. R package version 0.1.8, https://github.com/shhschilling/visStatistics.","code":"@Manual{,   title = {visStatistics: Automated Selection and Visualisation of Statistical Hypothesis Tests},   author = {Sabine Schilling},   year = {2025},   note = {R package version 0.1.8},   url = {https://github.com/shhschilling/visStatistics}, }"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"visstatistics-the-right-test-visualised","dir":"","previous_headings":"","what":"visStatistics","title":"visStatistics","text":"R package visStatistics allows rapid visualisation statistical analysis raw data. automatically selects visualises appropriate statistical hypothesis test two vectors class integer, numeric factor. numerous R packages provide statistical testing functionality, designed pedagogical accessibility primary concern. visStatistics addresses gap automating test selection process presenting results using annotated, publication-ready visualisations. helps user focus interpretation rather technical execution. automated workflow particularly suited browser-based interfaces rely server-side R applications connected secure databases, users direct access, quick data visualisation, e.g. statistical consulting projects educational settings.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_1-install-the-package","dir":"","previous_headings":"","what":"1. Install the package","title":"visStatistics","text":"","code":"install.packages(\"visStatistics\")"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_2-load-the-package","dir":"","previous_headings":"","what":"2. Load the package","title":"visStatistics","text":"","code":"library(visStatistics)"},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_1install-devtools-from-cran-if-not-already-installed","dir":"","previous_headings":"","what":"1.Install devtools from CRAN if not already installed:","title":"visStatistics","text":"","code":"install.packages(\"devtools\")"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_2-load-the-devtools-package","dir":"","previous_headings":"","what":"2. Load the devtools package:","title":"visStatistics","text":"","code":"library(devtools)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_3-install-the-visstatistics-package-from-github","dir":"","previous_headings":"","what":"3. Install the visStatistics package from GitHub:","title":"visStatistics","text":"","code":"install_github(\"shhschilling/visStatistics\")"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_4-load-the-visstatistics-package","dir":"","previous_headings":"","what":"4. Load the visStatistics package:","title":"visStatistics","text":"","code":"library(visStatistics)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_5-view-help-for-the-main-function","dir":"","previous_headings":"","what":"5. View help for the main function:","title":"visStatistics","text":"","code":"? visstat"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"id_6-study-all-the-details-in-the-packages-vignette","dir":"","previous_headings":"","what":"6. Study all the details in the packages’ vignette:","title":"visStatistics","text":"","code":"vignette(\"visStatistics\")"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"visStatistics","text":"function visstat() accepts input two ways: standardised form, x y must vectors class \"numeric\", \"integer\", \"factor\". backward-compatible form, \"namex\" \"namey\" must character strings naming columns data.frame named dataframe. column must class \"numeric\", \"integer\", \"factor\". equivalent writing: simplify notation, throughout remainder, data class numeric integer referred common mode numeric, data class factor referred categorical. interpretation x y depends classes: one numeric factor, numeric must passed response y factor predictor x. supports tests central tendencies. numeric, simple linear regression model fitted y response x predictor. factors, test association performed (Chi-squared Fisher’s exact). test symmetric, plot layout depends variable supplied x. visstat() selects appropriate statistical test generates visualisations accompanied main test statistics.","code":"# Standardised form (recommended): visstat(x, y)  # Backward-compatible form: visstat(dataframe, \"namey\", \"namex\") visstat(dataframe[[\"namex\"]], dataframe[[\"namey\"]])"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"visStatistics","text":"","code":"library(visStatistics)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"numerical-response-and-categorical-predictor","dir":"","previous_headings":"","what":"Numerical response and categorical predictor","title":"visStatistics","text":"response numerical predictor categorical, test central tendencies selected.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"insectsprays-data-set--both-input-forms","dir":"","previous_headings":"Numerical response and categorical predictor > Welch two sample t-test","what":"InsectSprays data set — both input forms","title":"visStatistics","text":"","code":"insect_sprays_ab <- InsectSprays[InsectSprays$spray %in% c(\"A\", \"B\"), ] insect_sprays_ab$spray <- factor(insect_sprays_ab$spray)  # Standardised input fom visstat(insect_sprays_ab$spray, insect_sprays_ab$count) ### Wilcoxon rank sum test    ``` r grades_gender <- data.frame(   sex = factor(rep(c(\"girl\", \"boy\"), times = c(21, 23))),   grade = c(     19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4, 20.3, 9.3, 11.3,     18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.0, 16.5, 5.1,     15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4, 7.3, 14.3,     13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6, 17.3, 19.9, 4.4, 2.1   ) )  wilcoxon_statistics <- visstat(grades_gender$sex, grades_gender$grade)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"one-way-test","dir":"","previous_headings":"Numerical response and categorical predictor","what":"One-way test","title":"visStatistics","text":"","code":"one_way_npk <- visstat(npk$block,npk$yield)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"kruskal-wallis-test","dir":"","previous_headings":"Numerical response and categorical predictor","what":"Kruskal-Wallis test","title":"visStatistics","text":"","code":"kruskal_iris=visstat(iris$Species, iris$Petal.Width)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"numerical-response-and-numerical-predictor-linear-regression","dir":"","previous_headings":"","what":"Numerical response and numerical predictor: Linear Regression","title":"visStatistics","text":"Increasing confidence level conf.level default 0.95 0.99 leads two wider confidence prediction bands:","code":"linreg_cars <- visstat(cars$speed ,cars$dist)"},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"pearsons-chi-squared-test","dir":"","previous_headings":"Both variables categorical","what":"Pearson’s Chi-squared test","title":"visStatistics","text":"Count data sets often presented multidimensional arrays, - called contingency tables, whereas visstat() requires data.frame column structure. Arrays can transformed column wise structure helper function counts_to_cases():","code":"hair_eye_color_df <- counts_to_cases(as.data.frame(HairEyeColor)) visstat(hair_eye_color_df$Eye, hair_eye_color_df$Hair)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"fishers-exact-test","dir":"","previous_headings":"Both variables categorical","what":"Fisher’s exact test","title":"visStatistics","text":"","code":"hair_eye_color_male <- HairEyeColor[, , 1] # Slice out a 2 by 2 contingency table black_brown_hazel_green_male <- hair_eye_color_male[1:2, 3:4] # Transform to data frame black_brown_hazel_green_male <- counts_to_cases(as.data.frame(black_brown_hazel_green_male)) # Fisher test fisher_stats <- visstat(black_brown_hazel_green_male$Eye,black_brown_hazel_green_male$Hair)"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"saving-the-graphical-output","dir":"","previous_headings":"","what":"Saving the graphical output","title":"visStatistics","text":"generated graphics can saved file format supported Cairo(), including “png”, “jpeg”, “pdf”, “svg”, “ps”, “tiff” user specified plotDirectory. optional argument plotName given, naming output follows pattern \"testname_namey_namex.\", \"testname\" specifies selected test visualisation \"namey\" \"namex\" character strings naming selected data vectors y x, respectively. suffix corresponding chosen graphicsoutput (e.g., \"pdf\", \"png\") concatenated form complete output file name. following example, store graphics png format plotDirectory tempdir() default naming convention: full file path generated graphics stored attribute \"plot_paths\" returned object class \"visstat\". Remove graphical output plotDirectory:","code":"#Graphical output written to plotDirectory: In this example  # a bar chart to visualise the Chi-squared test and mosaic plot showing # Pearson's residuals named  #chi_squared_or_fisher_Hair_Eye.png and mosaic_complete_Hair_Eye.png resp.  save_fisher <- visstat(black_brown_hazel_green_male, \"Hair\", \"Eye\",         graphicsoutput = \"png\", plotDirectory = tempdir()) paths <- attr(save_fisher, \"plot_paths\") print(paths) #> [1] \"/var/folders/5c/n85wqnh95l50qbp3s9l0rp_w0000gn/T//Rtmpbf87ya/chi_squared_or_fisher_Hair_Eye.png\" #> [2] \"/var/folders/5c/n85wqnh95l50qbp3s9l0rp_w0000gn/T//Rtmpbf87ya/mosaic_complete_Hair_Eye.png\" file.remove(paths) #> [1] TRUE TRUE"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"decision-logic","dir":"","previous_headings":"","what":"Decision logic","title":"visStatistics","text":"choice statistical tests depends whether data selected columns numeric categorical, number levels categorical variable, distribution data. function prioritizes interpretable visual output tests remain valid decision logic given . rationale test choices given packages’ vignette.","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"numerical-response-and-categorical-predictor-1","dir":"","previous_headings":"","what":"Numerical response and categorical predictor","title":"visStatistics","text":"response numeric predictor categorical, statistical hypothesis test central tendencies selected. categorical predictor exactly two levels, Welch’s t-test (t.test()) applied groups contain 30 observations. heuristic based central limit theorem, ensures approximate normality sampling distribution mean (Rasch, Kubinger, Moder 2011; Lumley et al. 2002). smaller samples, group - wise normality assessed using Shapiro - Wilk test (shapiro.test()) significance level α (Razali Wah 2011; Ghasemi Zahediasl 2012). groups found approximately normally distributed according Shapiro - Wilk test, Welch’s t-test applied; otherwise, Wilcoxon rank-sum test (wilcox.test()) used. predictors two levels, ANOVA model (aov()) initially fitted. normality residuals evaluated using Shapiro–Wilk test (shapiro.test()) Anderson–Darling test (ad.test()); algorithm considers residuals approximately normal Shapiro–Wilk test yields result exceeding significance threshold α (Razali Wah 2011):  condition met, Levene-Brown–Forsythe-test (Brown Forsythe 1974) (levene.test()) used assess homoscedasticity. variances homogeneous (p > α), ANOVA applied Tukey’s HSD (TukeyHSD()) post-hoc comparison. variances differ significantly (p ≤ α), Welch’s one - way test (oneway.test()) used, also followed Tukey’s HSD. residuals normally distributed according tests (p ≤ α), Kruskal-Wallis test (kruskal.test()) selected, followed pairwise Wilcoxon tests (pairwise.wilcox.test()). graphical overview decision logic used provided figure.  Decision tree used select appropriate statistical test categorical predictor numeric response, based number factor levels, normality, homoscedasticity.","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"numerical-response-and-numerical-predictor-linear-regression-1","dir":"","previous_headings":"","what":"Numerical response and numerical predictor: Linear Regression","title":"visStatistics","text":"response predictor numeric, simple linear regression model (lm()) fitted. resulting plots shows regression line, confidence prognosis bands. Residual analysis performed graphically (Tukey-Anscombe residual plot QQ-plot) via tests normality shapiro.test() ad.test(). Note one explanatory variable allowed, function designed two-dimensional visualisation.","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"both-variables-categorical-1","dir":"","previous_headings":"","what":"Both variables categorical","title":"visStatistics","text":"variables categorical, visstat() tests null hypothesis variables independent using either chisq.test() fisher.test(). choice test based Cochran’s rule (Cochran 1954), advises theχ2approximation reliable expected cell count zero 20 percent cells expected counts 5. detailed description underlying decision logic see","code":"vignette(\"visStatistics\")"},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"visStatistics","text":"main purpose package decision-logic based automatic visualisation statistical test results. Therefore, except user-adjustable conf.level parameter, statistical tests applied using default settings corresponding base R functions. consequence, paired tests currently supported visstat() allow study interactions terms different levels independent variable analysis variance. Focusing graphical representation tests, simple linear regression implemented, multiple linear regressions visualised.","code":""},{"path":[]},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"main-tests","dir":"","previous_headings":"Implemented tests > Numerical response and categorical predictor","what":"Main tests","title":"visStatistics","text":"t.test(), wilcox.test(), aov(), oneway.test(), kruskal.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"normality-assumption-check","dir":"","previous_headings":"Implemented tests > Numerical response and categorical predictor","what":"Normality assumption check","title":"visStatistics","text":"shapiro.test() ad.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"homoscedasticity-assumption-check","dir":"","previous_headings":"Implemented tests > Numerical response and categorical predictor","what":"Homoscedasticity assumption check","title":"visStatistics","text":"levene.test() bartlett.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"post-hoc-tests-tukeyhsd-used-following-aovand-onewaytest","dir":"","previous_headings":"Implemented tests > Numerical response and categorical predictor","what":"Post-hoc tests-TukeyHSD() (used following aov()and oneway.test())","title":"visStatistics","text":"pairwise.wilcox.test() (used following kruskal.test())","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"numerical-response-and-numerical-predictor","dir":"","previous_headings":"Implemented tests","what":"Numerical response and numerical predictor","title":"visStatistics","text":"response predictor numerical, simple linear regression model fitted:lm(). Normality residuals assesed graphically(Tukey-Anscombe plot Q-Q plot) well shapiro.test() ad.test() Note multiple linear regression models implemented, package focuses visualisation data, model building. ### Categorical response categorical predictor variables categorical, visstat() tests null hypothesis independence using one following:-chisq.test() (default larger samples) - fisher.test() (used small expected cell counts based Cochran’s rule)","code":""},{"path":"https://shhschilling.github.io/visStatistics/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"visStatistics","text":"Brown, Morton B., Alan B. Forsythe. 1974. “Robust Tests Equality Variances.” Journal American Statistical Association 69 (346): 364–67. https://doi.org/10.1080/01621459.1974.10482955. Cochran, William G. 1954. “Combination Estimates Different Experiments.” Biometrics 10 (1): 101. https://doi.org/10.2307/3001666. Ghasemi, Asghar, Saleh Zahediasl. 2012. “Normality Tests Statistical Analysis: Guide Non-Statisticians.” Int J Endocrinol Metab 10 (2): 486–89. https://doi.org/10.5812/ijem.3505. Lumley, Thomas, Paula Diehr, Scott Emerson, Lu Chen. 2002. “Importance Normality Assumption Large Public Health Data Sets.” Annu. Rev. Public Health 23 (1): 151–69. https://doi.org/10.1146/annurev.publhealth.23.100901.140546. Rasch, Dieter, Klaus D. Kubinger, Karl Moder. 2011. “Two-Sample t Test: Pre-Testing Assumptions Pay .” Stat Papers 52 (1): 219–31. https://doi.org/10.1007/s00362-009-0224-x. Razali, Nornadiah Mohd, Yap Bee Wah. 2011. “Power Comparisons Shapiro-Wilk, Kolmogorov-Smirnov, Lilliefors Anderson-Darling Tests.” Journal Statistical Modeling Analytics 2 (1): 21–33.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/counts_to_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data frame of counts to dataframe of cases. The data frame must contain a column with frequencies (counts) as generated by as.data.frame from a contingency table — counts_to_cases","title":"Convert data frame of counts to dataframe of cases. The data frame must contain a column with frequencies (counts) as generated by as.data.frame from a contingency table — counts_to_cases","text":"Convert data frame counts dataframe cases. data frame must contain column frequencies (counts) generated .data.frame contingency table","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/counts_to_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data frame of counts to dataframe of cases. The data frame must contain a column with frequencies (counts) as generated by as.data.frame from a contingency table — counts_to_cases","text":"","code":"counts_to_cases(x, countcol = \"Freq\")"},{"path":"https://shhschilling.github.io/visStatistics/reference/counts_to_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data frame of counts to dataframe of cases. The data frame must contain a column with frequencies (counts) as generated by as.data.frame from a contingency table — counts_to_cases","text":"x data.frame counts generated contingency table. countcol character string, name column x containing counts. Default name column  'Freq'.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/counts_to_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data frame of counts to dataframe of cases. The data frame must contain a column with frequencies (counts) as generated by as.data.frame from a contingency table — counts_to_cases","text":"data frame cases dimension (total number counts sum 'Freq' x) times 2.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/counts_to_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data frame of counts to dataframe of cases. The data frame must contain a column with frequencies (counts) as generated by as.data.frame from a contingency table — counts_to_cases","text":"","code":"counts_to_cases(as.data.frame(HairEyeColor[, , 1]), countcol = \"Freq\") #>        Hair   Eye #> 1     Black Brown #> 1.1   Black Brown #> 1.2   Black Brown #> 1.3   Black Brown #> 1.4   Black Brown #> 1.5   Black Brown #> 1.6   Black Brown #> 1.7   Black Brown #> 1.8   Black Brown #> 1.9   Black Brown #> 1.10  Black Brown #> 1.11  Black Brown #> 1.12  Black Brown #> 1.13  Black Brown #> 1.14  Black Brown #> 1.15  Black Brown #> 1.16  Black Brown #> 1.17  Black Brown #> 1.18  Black Brown #> 1.19  Black Brown #> 1.20  Black Brown #> 1.21  Black Brown #> 1.22  Black Brown #> 1.23  Black Brown #> 1.24  Black Brown #> 1.25  Black Brown #> 1.26  Black Brown #> 1.27  Black Brown #> 1.28  Black Brown #> 1.29  Black Brown #> 1.30  Black Brown #> 1.31  Black Brown #> 2     Brown Brown #> 2.1   Brown Brown #> 2.2   Brown Brown #> 2.3   Brown Brown #> 2.4   Brown Brown #> 2.5   Brown Brown #> 2.6   Brown Brown #> 2.7   Brown Brown #> 2.8   Brown Brown #> 2.9   Brown Brown #> 2.10  Brown Brown #> 2.11  Brown Brown #> 2.12  Brown Brown #> 2.13  Brown Brown #> 2.14  Brown Brown #> 2.15  Brown Brown #> 2.16  Brown Brown #> 2.17  Brown Brown #> 2.18  Brown Brown #> 2.19  Brown Brown #> 2.20  Brown Brown #> 2.21  Brown Brown #> 2.22  Brown Brown #> 2.23  Brown Brown #> 2.24  Brown Brown #> 2.25  Brown Brown #> 2.26  Brown Brown #> 2.27  Brown Brown #> 2.28  Brown Brown #> 2.29  Brown Brown #> 2.30  Brown Brown #> 2.31  Brown Brown #> 2.32  Brown Brown #> 2.33  Brown Brown #> 2.34  Brown Brown #> 2.35  Brown Brown #> 2.36  Brown Brown #> 2.37  Brown Brown #> 2.38  Brown Brown #> 2.39  Brown Brown #> 2.40  Brown Brown #> 2.41  Brown Brown #> 2.42  Brown Brown #> 2.43  Brown Brown #> 2.44  Brown Brown #> 2.45  Brown Brown #> 2.46  Brown Brown #> 2.47  Brown Brown #> 2.48  Brown Brown #> 2.49  Brown Brown #> 2.50  Brown Brown #> 2.51  Brown Brown #> 2.52  Brown Brown #> 3       Red Brown #> 3.1     Red Brown #> 3.2     Red Brown #> 3.3     Red Brown #> 3.4     Red Brown #> 3.5     Red Brown #> 3.6     Red Brown #> 3.7     Red Brown #> 3.8     Red Brown #> 3.9     Red Brown #> 4     Blond Brown #> 4.1   Blond Brown #> 4.2   Blond Brown #> 5     Black  Blue #> 5.1   Black  Blue #> 5.2   Black  Blue #> 5.3   Black  Blue #> 5.4   Black  Blue #> 5.5   Black  Blue #> 5.6   Black  Blue #> 5.7   Black  Blue #> 5.8   Black  Blue #> 5.9   Black  Blue #> 5.10  Black  Blue #> 6     Brown  Blue #> 6.1   Brown  Blue #> 6.2   Brown  Blue #> 6.3   Brown  Blue #> 6.4   Brown  Blue #> 6.5   Brown  Blue #> 6.6   Brown  Blue #> 6.7   Brown  Blue #> 6.8   Brown  Blue #> 6.9   Brown  Blue #> 6.10  Brown  Blue #> 6.11  Brown  Blue #> 6.12  Brown  Blue #> 6.13  Brown  Blue #> 6.14  Brown  Blue #> 6.15  Brown  Blue #> 6.16  Brown  Blue #> 6.17  Brown  Blue #> 6.18  Brown  Blue #> 6.19  Brown  Blue #> 6.20  Brown  Blue #> 6.21  Brown  Blue #> 6.22  Brown  Blue #> 6.23  Brown  Blue #> 6.24  Brown  Blue #> 6.25  Brown  Blue #> 6.26  Brown  Blue #> 6.27  Brown  Blue #> 6.28  Brown  Blue #> 6.29  Brown  Blue #> 6.30  Brown  Blue #> 6.31  Brown  Blue #> 6.32  Brown  Blue #> 6.33  Brown  Blue #> 6.34  Brown  Blue #> 6.35  Brown  Blue #> 6.36  Brown  Blue #> 6.37  Brown  Blue #> 6.38  Brown  Blue #> 6.39  Brown  Blue #> 6.40  Brown  Blue #> 6.41  Brown  Blue #> 6.42  Brown  Blue #> 6.43  Brown  Blue #> 6.44  Brown  Blue #> 6.45  Brown  Blue #> 6.46  Brown  Blue #> 6.47  Brown  Blue #> 6.48  Brown  Blue #> 6.49  Brown  Blue #> 7       Red  Blue #> 7.1     Red  Blue #> 7.2     Red  Blue #> 7.3     Red  Blue #> 7.4     Red  Blue #> 7.5     Red  Blue #> 7.6     Red  Blue #> 7.7     Red  Blue #> 7.8     Red  Blue #> 7.9     Red  Blue #> 8     Blond  Blue #> 8.1   Blond  Blue #> 8.2   Blond  Blue #> 8.3   Blond  Blue #> 8.4   Blond  Blue #> 8.5   Blond  Blue #> 8.6   Blond  Blue #> 8.7   Blond  Blue #> 8.8   Blond  Blue #> 8.9   Blond  Blue #> 8.10  Blond  Blue #> 8.11  Blond  Blue #> 8.12  Blond  Blue #> 8.13  Blond  Blue #> 8.14  Blond  Blue #> 8.15  Blond  Blue #> 8.16  Blond  Blue #> 8.17  Blond  Blue #> 8.18  Blond  Blue #> 8.19  Blond  Blue #> 8.20  Blond  Blue #> 8.21  Blond  Blue #> 8.22  Blond  Blue #> 8.23  Blond  Blue #> 8.24  Blond  Blue #> 8.25  Blond  Blue #> 8.26  Blond  Blue #> 8.27  Blond  Blue #> 8.28  Blond  Blue #> 8.29  Blond  Blue #> 9     Black Hazel #> 9.1   Black Hazel #> 9.2   Black Hazel #> 9.3   Black Hazel #> 9.4   Black Hazel #> 9.5   Black Hazel #> 9.6   Black Hazel #> 9.7   Black Hazel #> 9.8   Black Hazel #> 9.9   Black Hazel #> 10    Brown Hazel #> 10.1  Brown Hazel #> 10.2  Brown Hazel #> 10.3  Brown Hazel #> 10.4  Brown Hazel #> 10.5  Brown Hazel #> 10.6  Brown Hazel #> 10.7  Brown Hazel #> 10.8  Brown Hazel #> 10.9  Brown Hazel #> 10.10 Brown Hazel #> 10.11 Brown Hazel #> 10.12 Brown Hazel #> 10.13 Brown Hazel #> 10.14 Brown Hazel #> 10.15 Brown Hazel #> 10.16 Brown Hazel #> 10.17 Brown Hazel #> 10.18 Brown Hazel #> 10.19 Brown Hazel #> 10.20 Brown Hazel #> 10.21 Brown Hazel #> 10.22 Brown Hazel #> 10.23 Brown Hazel #> 10.24 Brown Hazel #> 11      Red Hazel #> 11.1    Red Hazel #> 11.2    Red Hazel #> 11.3    Red Hazel #> 11.4    Red Hazel #> 11.5    Red Hazel #> 11.6    Red Hazel #> 12    Blond Hazel #> 12.1  Blond Hazel #> 12.2  Blond Hazel #> 12.3  Blond Hazel #> 12.4  Blond Hazel #> 13    Black Green #> 13.1  Black Green #> 13.2  Black Green #> 14    Brown Green #> 14.1  Brown Green #> 14.2  Brown Green #> 14.3  Brown Green #> 14.4  Brown Green #> 14.5  Brown Green #> 14.6  Brown Green #> 14.7  Brown Green #> 14.8  Brown Green #> 14.9  Brown Green #> 14.10 Brown Green #> 14.11 Brown Green #> 14.12 Brown Green #> 14.13 Brown Green #> 14.14 Brown Green #> 15      Red Green #> 15.1    Red Green #> 15.2    Red Green #> 15.3    Red Green #> 15.4    Red Green #> 15.5    Red Green #> 15.6    Red Green #> 16    Blond Green #> 16.1  Blond Green #> 16.2  Blond Green #> 16.3  Blond Green #> 16.4  Blond Green #> 16.5  Blond Green #> 16.6  Blond Green #> 16.7  Blond Green"},{"path":"https://shhschilling.github.io/visStatistics/reference/levene.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","title":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","text":"Performs Levene's test using  Brown-Forsyth modification (median-centred). reproduces th  default behaviour leveneTest() car-package.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/levene.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","text":"","code":"levene.test(y, g, data = NULL)"},{"path":"https://shhschilling.github.io/visStatistics/reference/levene.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","text":"y numeric response vector. g grouping factor. data Optional data frame containing `y` `g`.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/levene.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","text":"object class \"htest\" components: statistic value F-statistic. parameter degrees freedom numerator denominator. p.value p-value test. method character string indicating test performed. data.name character string giving name(s) data.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/levene.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","text":"Brown, M. B., Forsythe, . B. (1974). Robust tests equality variances. Journal American Statistical Association, 69(346), 364–367. DOI: 10.1080/01621459.1974.10482955","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/levene.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Levene-Brown-Forsythe Test for Homogeneity of Variance (center = median) — levene.test","text":"","code":"set.seed(123) y <- c(rnorm(10), rnorm(10, sd = 2), rnorm(10, sd = 0.5)) g <- factor(rep(1:3, each = 10)) levene.test(y, g) #>  #> \tLevene-Brown-Forsythe Test (center = median) #>  #> data:  absolute deviations from group medians (for ANOVA on spread differences) #> F = 3.3913, df1 = 2, df2 = 27, p-value = 0.04853 #>   # Usage with data frame df <- data.frame(response = y, group = g) levene.test(response, group, data = df) #>  #> \tLevene-Brown-Forsythe Test (center = median) #>  #> data:  absolute deviations from group medians (for ANOVA on spread differences) #> F = 3.3913, df1 = 2, df2 = 27, p-value = 0.04853 #>   # Example with unequal variances (should reject null hypothesis) set.seed(456) y_unequal <- c(rnorm(15, sd = 1), rnorm(15, sd = 5), rnorm(15, sd = 0.2)) g_unequal <- factor(rep(c(\"A\", \"B\", \"C\"), each = 15)) levene.test(y_unequal, g_unequal) #>  #> \tLevene-Brown-Forsythe Test (center = median) #>  #> data:  absolute deviations from group medians (for ANOVA on spread differences) #> F = 31.384, df1 = 2, df2 = 42, p-value = 4.607e-09 #>"},{"path":"https://shhschilling.github.io/visStatistics/reference/openGraphCairo.html","id":null,"dir":"Reference","previous_headings":"","what":"Cairo wrapper function with plot capture capability — openGraphCairo","title":"Cairo wrapper function with plot capture capability — openGraphCairo","text":"Cairo wrapper function returning NULL type specified. Enhanced version can capture plots later replay.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/openGraphCairo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cairo wrapper function with plot capture capability — openGraphCairo","text":"","code":"openGraphCairo(   width = 640,   height = 480,   fileName = NULL,   type = NULL,   fileDirectory = getwd(),   pointsize = 12,   bg = \"transparent\",   canvas = \"white\",   units = \"px\",   dpi = 150 )"},{"path":"https://shhschilling.github.io/visStatistics/reference/openGraphCairo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cairo wrapper function with plot capture capability — openGraphCairo","text":"width see Cairo() height see Cairo() fileName name file created. include file extension '.type' file filedirectory. Default file name 'visstat_plot'. type Supported output types 'png', 'jpeg', 'pdf', 'svg', 'ps' 'tiff'. See Cairo() fileDirectory path directory, plot stored. Default current working directory. pointsize see Cairo() bg see Cairo() canvas see Cairo() units see Cairo() dpi DPI used conversion units pixels. Default value 150.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/openGraphCairo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cairo wrapper function with plot capture capability — openGraphCairo","text":"NULL, type specified. Otherwise see Cairo()","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/openGraphCairo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cairo wrapper function with plot capture capability — openGraphCairo","text":"openGraphCairo() Cairo() wrapper function. Differences Cairo: ) prematurely ends function call Cairo() returning NULL, output type  types 'png', 'jpeg', 'pdf', 'svg', 'ps' 'tiff' provided. b) file argument underlying Cairo function generated file.path(fileDirectory,paste(fileName,'.', type, sep = '')). c) Can set plot capture capture_env provided.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/openGraphCairo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cairo wrapper function with plot capture capability — openGraphCairo","text":"","code":"##  adapted from example in \\code{Cairo()} openGraphCairo(fileName = \"normal_dist\", type = \"pdf\", fileDirectory = tempdir()) plot(rnorm(4000), rnorm(4000), col = \"#ff000018\", pch = 19, cex = 2) dev.off() # creates a file 'normal_dist.pdf' in the directory specified in fileDirectory #> agg_record_206621814  #>                    2  # ## remove the plot from fileDirectory file.remove(file.path(tempdir(), \"normal_dist.pdf\")) #> [1] TRUE"},{"path":"https://shhschilling.github.io/visStatistics/reference/plot.visstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for visstat objects — plot.visstat","title":"Plot method for visstat objects — plot.visstat","text":"Displays captured plots reports saved plot file paths.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/plot.visstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for visstat objects — plot.visstat","text":"","code":"# S3 method for class 'visstat' plot(x, which = NULL, ...)"},{"path":"https://shhschilling.github.io/visStatistics/reference/plot.visstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for visstat objects — plot.visstat","text":"x object class \"visstat\". plot display (1, 2, 3, etc.). NULL, shows plots. ... Currently unused.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/plot.visstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for visstat objects — plot.visstat","text":"Invisibly returns x. Used side effect.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/plot.visstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for visstat objects — plot.visstat","text":"","code":"anova_path=visstat(npk$block, npk$yield,graphicsoutput = \"png\", plotDirectory = tempdir())  plot(anova_path) #plots paths to graphics files  #> Plot [1] stored in /var/folders/5c/n85wqnh95l50qbp3s9l0rp_w0000gn/T//RtmpFRHHkH/assumptions_yield_block.png #> Plot [2] stored in /var/folders/5c/n85wqnh95l50qbp3s9l0rp_w0000gn/T//RtmpFRHHkH/anova_yield_block.png"},{"path":"https://shhschilling.github.io/visStatistics/reference/print.vis_anova_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for vis_anova_assumptions — print.vis_anova_assumptions","title":"Print method for vis_anova_assumptions — print.vis_anova_assumptions","text":"Print method vis_anova_assumptions","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/print.vis_anova_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for vis_anova_assumptions — print.vis_anova_assumptions","text":"","code":"# S3 method for class 'vis_anova_assumptions' print(x, ...)"},{"path":"https://shhschilling.github.io/visStatistics/reference/print.vis_anova_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for vis_anova_assumptions — print.vis_anova_assumptions","text":"x object class \"vis_anova_assumptions\" ... Additional arguments passed print","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/print.visstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for visstat objects — print.visstat","title":"Print method for visstat objects — print.visstat","text":"Displays brief summary statistical test results , available, assumption tests post hoc comparisons.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/print.visstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for visstat objects — print.visstat","text":"","code":"# S3 method for class 'visstat' print(x, ...)"},{"path":"https://shhschilling.github.io/visStatistics/reference/print.visstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for visstat objects — print.visstat","text":"x object class \"visstat\", returned visstat(). ... Currently unused. Included S3 method compatibility.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/print.visstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for visstat objects — print.visstat","text":"object x, invisibly.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/print.visstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for visstat objects — print.visstat","text":"Quick overview statistical analysis results.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/reference/print.visstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for visstat objects — print.visstat","text":"","code":"anova=visstat(npk$block, npk$yield)   print(anova) #> Object of class 'visstat' #>  #> Available components: #> [1] \"summary statistics of ANOVA\"    \"post-hoc analysis of TuckeyHSD\" #> [3] \"conf.level\""},{"path":"https://shhschilling.github.io/visStatistics/reference/saveGraphVisstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves Graphical Output with plot capture capability — saveGraphVisstat","title":"Saves Graphical Output with plot capture capability — saveGraphVisstat","text":"Closes graphical devices dev.() saves output fileName type provided. Enhanced version can capture plots closing devices.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/saveGraphVisstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves Graphical Output with plot capture capability — saveGraphVisstat","text":"","code":"saveGraphVisstat(   fileName = NULL,   type = NULL,   fileDirectory = getwd(),   oldfile = NULL,   capture_env = NULL )"},{"path":"https://shhschilling.github.io/visStatistics/reference/saveGraphVisstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves Graphical Output with plot capture capability — saveGraphVisstat","text":"fileName name file created directory fileDirectory without file extension '.type'. type see Cairo(). fileDirectory path directory, graphic stored. Default setting current working directory. oldfile old file name overwritten capture_env Environment store captured plots. NULL, capture occurs.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/saveGraphVisstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves Graphical Output with plot capture capability — saveGraphVisstat","text":"NULL, type fileName provided, file path graph   created","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/saveGraphVisstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves Graphical Output with plot capture capability — saveGraphVisstat","text":"","code":"# very simple KDE (adapted from example in Cairo()) openGraphCairo(type = \"png\", fileDirectory = tempdir()) plot(rnorm(4000), rnorm(4000), col = \"#ff000018\", pch = 19, cex = 2) # save file 'norm.png' in directory specified in fileDirectory saveGraphVisstat(\"norm\", type = \"png\", fileDirectory = tempdir()) file.remove(file.path(tempdir(), \"norm.png\")) # remove file 'norm.png' #> [1] TRUE"},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.vis_anova_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for vis_anova_assumptions — summary.vis_anova_assumptions","title":"Summary method for vis_anova_assumptions — summary.vis_anova_assumptions","text":"Summary method vis_anova_assumptions","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.vis_anova_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for vis_anova_assumptions — summary.vis_anova_assumptions","text":"","code":"# S3 method for class 'vis_anova_assumptions' summary(object, ...)"},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.vis_anova_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for vis_anova_assumptions — summary.vis_anova_assumptions","text":"object object class \"vis_anova_assumptions\" ... Additional arguments","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.visstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for visstat objects — summary.visstat","title":"Summary method for visstat objects — summary.visstat","text":"Displays full statistical test results , available, assumption tests post hoc comparisons.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.visstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for visstat objects — summary.visstat","text":"","code":"# S3 method for class 'visstat' summary(object, ...)"},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.visstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for visstat objects — summary.visstat","text":"object object class \"visstat\", returned visstat(). ... Currently unused. Included S3 method compatibility.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.visstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for visstat objects — summary.visstat","text":"object object, invisibly.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.visstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary method for visstat objects — summary.visstat","text":"method provides full textual report statistical test results returned visstat(), prints contents posthoc_summary present.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/reference/summary.visstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for visstat objects — summary.visstat","text":"","code":"anova=visstat(npk$block, npk$yield)   summary(anova) #> Summary of visstat object #>  #> --- Named components --- #> [1] \"summary statistics of ANOVA\"    \"post-hoc analysis of TuckeyHSD\" #> [3] \"conf.level\"                     #>  #> --- Contents --- #>  #> $summary statistics of ANOVA: #>  #> \tOne-way analysis of means (not assuming equal variances) #>  #> data:  samples and fact #> F = 6.2463, num df = 5.0000, denom df = 8.0508, p-value = 0.01178 #>  #>  #> $post-hoc analysis of TuckeyHSD: #>   Tukey multiple comparisons of means #>     95% family-wise confidence level #>  #> Fit: aov(formula = samples ~ fact) #>  #> $fact #>        diff        lwr       upr     p adj #> 2-1   3.425  -8.804242 15.654242 0.9440575 #> 3-1   6.750  -5.479242 18.979242 0.5166401 #> 4-1  -3.900 -16.129242  8.329242 0.9074049 #> 5-1  -3.500 -15.729242  8.729242 0.9390165 #> 6-1   2.325  -9.904242 14.554242 0.9893559 #> 3-2   3.325  -8.904242 15.554242 0.9503518 #> 4-2  -7.325 -19.554242  4.904242 0.4312574 #> 5-2  -6.925 -19.154242  5.304242 0.4900643 #> 6-2  -1.100 -13.329242 11.129242 0.9996936 #> 4-3 -10.650 -22.879242  1.579242 0.1094850 #> 5-3 -10.250 -22.479242  1.979242 0.1321421 #> 6-3  -4.425 -16.654242  7.804242 0.8539828 #> 5-4   0.400 -11.829242 12.629242 0.9999980 #> 6-4   6.225  -6.004242 18.454242 0.5981409 #> 6-5   5.825  -6.404242 18.054242 0.6604328 #>  #>  #> $conf.level: #> [1] 0.95"},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_anova_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualisation of the normality distribution of the standardised residuals — vis_anova_assumptions","title":"Visualisation of the normality distribution of the standardised residuals — vis_anova_assumptions","text":"Checks normality standardised residuals ANOVA regression. Performs Shapiro-Wilk test Anderson-Darling test normality , regression, also Levene-Brown-Forsythe Bartlett's test homogeneity variances. produces histogram normal overlay, residuals vs fitted plot, normal Q-Q plot.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_anova_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualisation of the normality distribution of the standardised residuals — vis_anova_assumptions","text":"","code":"vis_anova_assumptions(   samples,   fact,   conf.level = 0.95,   cex = 1,   regression = FALSE )"},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_anova_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualisation of the normality distribution of the standardised residuals — vis_anova_assumptions","text":"samples Numeric vector; dependent variable. fact Factor; independent variable. conf.level Numeric; confidence level tests (default: 0.95). cex Numeric; scaling factor plot text symbols (default: 1). regression Logical; TRUE, skips Bartlett's test (regression diagnostics). Default FALSE.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_anova_assumptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualisation of the normality distribution of the standardised residuals — vis_anova_assumptions","text":"list elements: summary_anova Summary ANOVA model. shapiro_test Result shapiro.test(). ad_test Result nortest::ad.test() character message n < 7. levene_test Result levene.test() (regression = FALSE). bartlett_test Result bartlett.test() (regression = FALSE).","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_anova_assumptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualisation of the normality distribution of the standardised residuals — vis_anova_assumptions","text":"","code":"ToothGrowth$dose <- as.factor(ToothGrowth$dose) vis_anova_assumptions(ToothGrowth$len, ToothGrowth$dose)  #> $summary_anova #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> fact         2   2426    1213   67.42 9.53e-16 *** #> Residuals   57   1026      18                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> $shapiro_test #>  #> \tShapiro-Wilk normality test #>  #> data:  std_residuals #> W = 0.96731, p-value = 0.1076 #>  #>  #> $ad_test #>  #> \tAnderson-Darling normality test #>  #> data:  std_residuals #> A = 0.68679, p-value = 0.06928 #>  #>  #> $levene_test #>  #> \tLevene-Brown-Forsythe Test (center = median) #>  #> data:  absolute deviations from group medians (for ANOVA on spread differences) #> F = 0.64573, df1 = 2, df2 = 57, p-value = 0.5281 #>  #>  #> $bartlett_test #>  #> \tBartlett test of homogeneity of variances #>  #> data:  samples by fact #> Bartlett's K-squared = 0.66547, df = 2, p-value = 0.717 #>  #>  #> attr(,\"class\") #> [1] \"vis_anova_assumptions\""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_ttest_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualisation of the normality assumption for t-test analysis — vis_ttest_assumptions","title":"Visualisation of the normality assumption for t-test analysis — vis_ttest_assumptions","text":"vis_ttest_assumptions checks normality group using Shapiro-Wilk test shapiro.test(). null hypothesis group normally distributed. function generates histograms normal distribution overlays Q-Q plot visually assess normality.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_ttest_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualisation of the normality assumption for t-test analysis — vis_ttest_assumptions","text":"","code":"vis_ttest_assumptions(   samples,   groups,   conf.level = 0.95,   samplename = \"\",   groupname = \"\",   cex = 1 )"},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_ttest_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualisation of the normality assumption for t-test analysis — vis_ttest_assumptions","text":"samples vector containing dependent variable, datatype numeric groups vector containing grouping variable, datatype factor (2 levels ) conf.level confidence level, 0.95=default samplename name sample used graphical output, datatype character , ”=default groupname name grouping variable used graphical output, datatype character, ”=default cex number indicating amount plotting text symbols scaled relative default. 1=default, 1.5 50% larger, 0.5 50% smaller, etc.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_ttest_assumptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualisation of the normality assumption for t-test analysis — vis_ttest_assumptions","text":"list containing Shapiro-Wilk test results group.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/vis_ttest_assumptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualisation of the normality assumption for t-test analysis — vis_ttest_assumptions","text":"","code":"# Using built-in datasets vis_ttest_assumptions(ToothGrowth$len, ToothGrowth$supp)  #> $shapiro_group1 #>  #> \tShapiro-Wilk normality test #>  #> data:  group1_data #> W = 0.91784, p-value = 0.02359 #>  #>  #> $shapiro_group2 #>  #> \tShapiro-Wilk normality test #>  #> data:  group2_data #> W = 0.96567, p-value = 0.4284 #>  #>   # Create sample data group1 <- rnorm(30, mean = 10, sd = 2) group2 <- rnorm(25, mean = 12, sd = 2.5) groups <- factor(c(rep(\"A\", 30), rep(\"B\", 25))) samples <- c(group1, group2) vis_ttest_assumptions(samples, groups)  #> $shapiro_group1 #>  #> \tShapiro-Wilk normality test #>  #> data:  group1_data #> W = 0.97854, p-value = 0.7855 #>  #>  #> $shapiro_group2 #>  #> \tShapiro-Wilk normality test #>  #> data:  group2_data #> W = 0.95484, p-value = 0.3213 #>  #>"},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for visstat_core allowing two different input styles — visstat","title":"Wrapper for visstat_core allowing two different input styles — visstat","text":"wrapper around core function visstat_core. visstat_core defines decision logic statistical hypothesis testing visualisation two variables class \"numeric\", \"integer\", \"factor\".","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for visstat_core allowing two different input styles — visstat","text":"","code":"visstat(   x,   y,   ...,   conf.level = 0.95,   numbers = TRUE,   minpercent = 0.05,   graphicsoutput = NULL,   plotName = NULL,   plotDirectory = getwd() )"},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for visstat_core allowing two different input styles — visstat","text":"x vector class \"numeric\", \"integer\", \"factor\" (standardised usage), data.frame containing relevant columns (backward-compatible usage). y second vector (standardised usage), character string specifying name column x (backward-compatible usage). ... x data frame y character string, additional character string must follow, naming second column. conf.level Confidence level statistical inference; default 0.95. numbers Logical. Whether annotate plots numeric values. minpercent Minimum proportion (0 1) required display category plots. graphicsoutput Optional. Output format plots (e.g., \"pdf\", \"png\"). plotName Optional. File name prefix saving plot output. default, follows pattern \"testname_namey_namex.\", \"testname\" specifies selected test \"namey\" \"namex\" character strings naming selected data vectors y x, respectively. suffix corresponding chosen graphicsoutput concatenated form complete figure file name. plotDirectory Directory save plots; defaults current working directory.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for visstat_core allowing two different input styles — visstat","text":"list returned visstat_core, containing statistical results graphical outputs.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for visstat_core allowing two different input styles — visstat","text":"wrapper supports two input formats: Standardised form: visstat(x, y),         x y vectors class \"numeric\",         \"integer\", \"factor\". Backward-compatible form:         visstat(dataframe, \"name_of_y\", \"name_of_x\"),         character strings refer column names dataframe.         equivalent :         visstat(dataframe[[\"name_of_x\"]], dataframe[[\"name_of_y\"]]). interpretation x y depends variable classes: following,  data class numeric  integer referred common mode numeric one variable numeric factor, numeric         vector must passed y factor x.         supports tests central tendencies (e.g., t-test, ANOVA, Wilcoxon). variables numeric, linear model fitted         y response x predictor. variables factors, association test (Chi-squared         Fisher’s exact) used. test result invariant         variable order, visualisations (e.g., axis layout, bar         orientation) depend roles x y. wrapper standardises input calls visstat_core, selects executes appropriate test visual output assumption diagnostics.","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for visstat_core allowing two different input styles — visstat","text":"","code":"## Standardised usage (preferred): mtcars$am=as.factor(mtcars$am) visstat(mtcars$am, mtcars$mpg)    ## Backward-compatible usage (same result): visstat(mtcars, \"mpg\", \"am\")    ## Wilcoxon rank sum test grades_gender <- data.frame(   Sex = as.factor(c(rep(\"Girl\", 20), rep(\"Boy\", 20))),   Grade = c(     19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4, 20.3, 9.3, 11.3,     18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.3, 16.5,     5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,     7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6   ) ) visstat(grades_gender$Sex, grades_gender$Grade)    ## Welch's one-way ANOVA visstat(npk$block, npk$yield)    ## Kruskal-Wallis visstat(iris$Species, iris$Petal.Width)    ## Simple linear regression visstat(trees$Height, trees$Girth, conf.level = 0.99)    ## Chi-squared HairEyeColorDataFrame <- counts_to_cases(as.data.frame(HairEyeColor)) visstat(HairEyeColorDataFrame$Eye, HairEyeColorDataFrame$Hair)    ## Fisher's test HairEyeColorMaleFisher <- HairEyeColor[, , 1] blackBrownHazelGreen <- HairEyeColorMaleFisher[1:2, 3:4] blackBrownHazelGreen <- counts_to_cases(as.data.frame(blackBrownHazelGreen)) visstat(blackBrownHazelGreen$Eye, blackBrownHazelGreen$Hair)    ## Save PNG visstat(blackBrownHazelGreen$Hair, blackBrownHazelGreen$Eye,         graphicsoutput = \"png\", plotDirectory = tempdir())  ## Custom plot name visstat(iris$Species, iris$Petal.Width,         graphicsoutput = \"pdf\", plotName = \"kruskal_iris\", plotDirectory = tempdir())"},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","title":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","text":"visstat_core() provides automated selection visualization statistical hypothesis test two vectors given data.frame named dataframe based data's type, distribution, sample size, specified conf.level. visstat_core() called main  wrapper function visstat(). varsample varfactor character strings corresponding column names chosen vectors dataframe. vectors must type integer, numeric factor. automatically generated output figures illustrate selected statistical hypothesis test, display main test statistics, include assumption checks post hoc comparisons applicable. primary test results returned list object.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","text":"","code":"visstat_core(   dataframe,   varsample,   varfactor,   conf.level = 0.95,   numbers = TRUE,   minpercent = 0.05,   graphicsoutput = NULL,   plotName = NULL,   plotDirectory = getwd() )"},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","text":"dataframe data.frame least two columns. varsample character string matching column name dataframe. Interpreted response referenced column class numeric integer column named varfactor class factor. varfactor character string matching column name dataframe. Interpreted grouping variable referenced column class factor column named varsample class numeric integer. conf.level Confidence level numbers logical indicating whether show numbers mosaic count plots. minpercent number 0 1 indicating minimal fraction total count data category displayed    mosaic count plots. graphicsoutput saves plot(s) type \"png\",  \"jpg\", \"tiff\"  \"bmp\" directory specified plotDirectory. graphicsoutput=NULL, plots saved. plotName graphical output stored following naming convention \"plotName.graphicsoutput\" plotDirectory. Without specifying parameter, plotName automatically generated following convention \"statisticalTestName_varsample_varfactor\". plotDirectory specifies directory, generated plots stored. Default current working directory.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","text":"list containing statistics automatically selected test   meeting assumptions. values returned invisible copies.   Values can accessed assigning return value visstat_core.","code":""},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat_core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","text":"decision logic selecting statistical test described . details, please refer package's vignette(\"visStatistics\"). Throughout, data class numeric integer referred numeric, data class factor referred categorical. significance level alpha defined one minus confidence level, given argument conf.level. Assumptions normality homoscedasticity considered met corresponding test yields p-value greater alpha = 1 - conf.level. choice statistical tests performed visstat_core() depends whether data numeric categorical, number levels categorical variable, distribution data, chosen conf.level. function prioritises interpretable visual output tests remain valid assumptions, following logic : (1) response numerical predictor categorical, tests central tendency performed. predictor two levels: t.test() used groups 30 observations (Lumley et al. (2002) <doi:10.1146/annurev.publhealth.23.100901.140546>). smaller samples, normality assessed using shapiro.test(). groups return p-values greater alpha, t.test() applied; otherwise, wilcox.test() used. predictors two levels, aov() initially fitted. Residual normality tested shapiro.test() ad.test(). p > alpha either test, normality assumed. Homogeneity variance tested bartlett.test(). p > alpha, aov() TukeyHSD() used. p <= alpha, oneway.test() applied TukeyHSD(). residuals normal, kruskal.test() pairwise.wilcox.test() used. (2): response predictor numerical, linear model lm() fitted, residual diagnostics confidence band plot. (3): variables categorical, visstat_core() uses chisq.test() fisher.test() depending expected counts, following Cochran's rule (Cochran (1954) <doi:10.2307/3001666>). Implemented main tests: t.test(), wilcox.test(), aov(), oneway.test(), lm(), kruskal.test(), fisher.test(), chisq.test(). Implemented tests assumptions: Normality: shapiro.test() ad.test() Heteroscedasticity: bartlett.test() levene.test() Implemented post hoc tests: TukeyHSD() aov() oneway.test() pairwise.wilcox.test() kruskal.test()","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/reference/visstat_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automated Visualization of Statistical Hypothesis Testing — visstat_core","text":"","code":"# Welch Two Sample t-test (t.test()) visstat_core(mtcars, \"mpg\", \"am\")    ## Wilcoxon rank sum test (wilcox.test()) grades_gender <- data.frame(   Sex = as.factor(c(rep(\"Girl\", 20), rep(\"Boy\", 20))),   Grade = c(     19.3, 18.1, 15.2, 18.3, 7.9, 6.2, 19.4,     20.3, 9.3, 11.3, 18.2, 17.5, 10.2, 20.1, 13.3, 17.2, 15.1, 16.2, 17.3,     16.5, 5.1, 15.3, 17.1, 14.8, 15.4, 14.4, 7.5, 15.5, 6.0, 17.4,     7.3, 14.3, 13.5, 8.0, 19.5, 13.4, 17.9, 17.7, 16.4, 15.6   ) ) visstat_core(grades_gender, \"Grade\", \"Sex\")    ## Welch's oneway ANOVA not assuming equal variances (oneway.test()) anova_npk <- visstat_core(npk, \"yield\", \"block\")   anova_npk # prints summary of tests #> Object of class 'visstat' #>  #> Available components: #> [1] \"summary statistics of ANOVA\"    \"post-hoc analysis of TuckeyHSD\" #> [3] \"conf.level\"                      ## Kruskal-Wallis rank sum test (kruskal.test()) visstat_core(iris, \"Petal.Width\", \"Species\")   visstat_core(InsectSprays, \"count\", \"spray\")  #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties   ## Simple linear regression  (lm()) visstat_core(trees, \"Girth\", \"Height\", conf.level = 0.99)    ## Pearson's Chi-squared test (chisq.test()) ### Transform array to data.frame HairEyeColorDataFrame <- counts_to_cases(as.data.frame(HairEyeColor)) visstat_core(HairEyeColorDataFrame, \"Hair\", \"Eye\")    ## Fisher's exact test (fisher.test()) HairEyeColorMaleFisher <- HairEyeColor[, , 1] ### slicing out a 2 x2 contingency table blackBrownHazelGreen <- HairEyeColorMaleFisher[1:2, 3:4] blackBrownHazelGreen <- counts_to_cases(as.data.frame(blackBrownHazelGreen)) fisher_stats <- visstat_core(blackBrownHazelGreen, \"Hair\", \"Eye\")"},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"major-changes-0-1-8","dir":"Changelog","previous_headings":"","what":"Major changes","title":"visStatistics 0.1.8","text":"Included new function levene.test() implementing Levene-Brown-Forsythe Test Homogeneity Variance (center = median). mimicks default behaviour leveneTest car - package Decision test logic now based shapiro,test() `leven.test()","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"structural-improvements-0-1-8","dir":"Changelog","previous_headings":"","what":"Structural Improvements","title":"visStatistics 0.1.8","text":"class \"visstat\" now includes plot-method: plot.visstat(). Tests comparing central tendencies now show plots testing normaliy assumption. assumption plots now safed prefix “assumption” followed plot name","code":""},{"path":[]},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"major-changes-0-1-6","dir":"Changelog","previous_headings":"","what":"Major changes","title":"visStatistics 0.1.6","text":"visstat() function interface updated accept two vectors directly, enabling concise idiomatic usage. example: visstat(treesGirth,treesGirth, treesHeight) yields result original form: visstat(trees, “Height”, “Girth”) change aligns standard R conventions. calling styles remain supported backwards compatibility. See ?visstat, README, vignette(\"visStatistics\") details. .","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"structural-improvements-0-1-6","dir":"Changelog","previous_headings":"","what":"Structural Improvements","title":"visStatistics 0.1.6","text":"visstat() function now returns object class \"visstat\", enabling consistent method dispatch. print.visstat() – shows concise summary, summary.visstat() – prints full test post hoc summaries.","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"visstatistics-015","dir":"Changelog","previous_headings":"","what":"visStatistics 0.1.5","title":"visStatistics 0.1.5","text":"CRAN release: 2025-05-24","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"news-0-1-5","dir":"Changelog","previous_headings":"","what":"News","title":"visStatistics 0.1.5","text":"Extended vignette: implemented tests explained greater detail. Graphical output displays corresponding test statistics, addition p-values, appropriate. Internal helper function get_samples_fact_inputfile() longer exported NAMESPACE.","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"bug-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"visStatistics 0.1.5","text":"legend Šidák-corrected confidence interval longer incorrectly states displays group means.","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"visstatistics-013","dir":"Changelog","previous_headings":"","what":"visStatistics 0.1.3","title":"visStatistics 0.1.3","text":"CRAN release: 2025-05-12","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"news-0-1-3","dir":"Changelog","previous_headings":"","what":"News","title":"visStatistics 0.1.3","text":"Added vignette visStatistics.Rmd documenting statistical decision logic, reproducible examples illustrating test case. Added graphical summary decision logic README vignette.","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"improvements-0-1-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"visStatistics 0.1.3","text":"precise parameter descriptions. Clearer presentation decision logic.","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"change-in-decision-logic-0-1-3","dir":"Changelog","previous_headings":"","what":"Change in decision logic","title":"visStatistics 0.1.3","text":"Welch’s t-test (t.test()) now applied groups 30 observations (previous threshold 100).","code":""},{"path":"https://shhschilling.github.io/visStatistics/news/index.html","id":"bug-fixes-0-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"visStatistics 0.1.3","text":"Confidence prediction bands regression now correctly reflect specified conf.level rather defaulting 0.95. Post hoc analysis Kruskal–Wallis test (pairwise.wilcox.test()) now uses specified conf.level. Switching fisher.test() now correctly follows expected cell count thresholds.","code":""}]
